{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = () => {\n  _s();\n\n  const arrayTemp = [];\n  const arrayTDS = [];\n  const arrayPH = [];\n  const arrayTime = [];\n  let seriesTemp = [];\n  let seriesTDS = [];\n  let seriesPH = [];\n  const {\n    deviceState: {\n      deviceData\n    },\n    getDevice\n  } = useContext(DeviceContext); // //get last data\n\n  useEffect(() => getDevice(), []);\n\n  function fetchChartData(length) {\n    axios.get(`${url}/data/chart/${selectedDevice}`).then(response => {\n      const data = response.data;\n\n      for (let j = 0; j < length; j++) {\n        var date = new Date(data.getalldata[j].createdAt);\n        arrayTime.push(date.getTime());\n        arrayTemp.push(data.getalldata[j].temperature * 1);\n        arrayTDS.push(data.getalldata[j].TDS * 1);\n        arrayPH.push(data.getalldata[j].PH * 1);\n      }\n\n      var values = [arrayTemp, arrayTDS, arrayPH, arrayTime];\n      var i = 0;\n\n      while (i < length) {\n        seriesTemp.push([values[3][i], values[0][i]]);\n        seriesTDS.push([values[3][i], values[1][i]]);\n        seriesPH.push([values[3][i], values[2][i]]);\n        i++;\n      }\n\n      window.dispatchEvent(new Event(\"resize\"));\n    }).catch(() => {\n      console.log(\"Error retrieving data!!!\");\n    });\n  }\n\n  const seriesArea = [{\n    name: \"Temperature\",\n    data: seriesTemp\n  }];\n  const optionsArea = {\n    chart: {\n      id: \"area\",\n      group: \"social\",\n      type: \"area\"\n    },\n    colors: [\"#00E396\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0]\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true\n    },\n    toolbar: {\n      autoSelected: \"zoom\"\n    }\n  };\n  const seriesSmall = [{\n    name: \"PH\",\n    data: seriesPH\n  }];\n  const optionsSmall = {\n    chart: {\n      id: \"ig\",\n      group: \"social\",\n      type: \"area\"\n    },\n    colors: [\"#008FFB\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n      tickAmount: 6\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true\n    },\n    toolbar: {\n      autoSelected: \"zoom\"\n    }\n  };\n  const seriesSmall2 = [{\n    name: \"TDS\",\n    data: seriesTDS\n  }];\n  const optionsSmall2 = {\n    chart: {\n      id: \"li\",\n      group: \"social\",\n      type: \"area\"\n    },\n    colors: [\"#b37700\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n      tickAmount: 6\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true\n    },\n    toolbar: {\n      autoSelected: \"zoom\"\n    }\n  };\n  const options = [{\n    value: \"1\",\n    label: \"1 day\"\n  }, {\n    value: \"2\",\n    label: \"1 week\"\n  }, {\n    value: \"3\",\n    label: \"1 month\"\n  }];\n\n  const onChange = event => setTime(event.value);\n\n  var optionsDevice = [];\n\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = {\n      value: deviceData[i].device,\n      label: `Device ${i + 1}`\n    };\n    optionsDevice.push(value);\n  }\n\n  console.log(optionsDevice);\n  const [selectDevice, setselectDevice] = useState(\"Device 1\");\n\n  const OnChangeDevice = event => {\n    setselectDevice(event.label);\n  };\n\n  console.log(selectDevice);\n  var selectedDevice;\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n    }\n  }\n\n  const [time, setTime] = useState(\"1\");\n\n  if (time === \"1\") {\n    fetchChartData(48); //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"2\") {\n    fetchChartData(336); //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"3\") {\n    fetchChartData(1440); // window.dispatchEvent(new Event(\"resize\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        options: optionsDevice,\n        className: \"selecttime\",\n        placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectDevice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 24\n        }, this),\n        onChange: OnChangeDevice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: options,\n        className: \"selecttime\",\n        placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"1 day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 24\n        }, this),\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-time-series\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart-small\",\n          className: \"timeseries\",\n          children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: optionsSmall,\n            series: seriesSmall,\n            type: \"area\",\n            height: 170,\n            width: 1040\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"PH Time Series Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart-small2\",\n          className: \"timeseries\",\n          children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: optionsSmall2,\n            series: seriesSmall2,\n            type: \"area\",\n            height: 170,\n            width: 1040\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"TDS Time Series Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"chart-area\",\n            className: \"timeseries\",\n            children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n              options: optionsArea,\n              series: seriesArea,\n              type: \"area\",\n              height: 170,\n              width: 1040\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Temperature Time Series Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Statistics, \"3vdkYfR2mOcdonTW61J5SRsqB8Y=\");\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js"],"names":["React","axios","ReactApexChart","Select","url","useState","useContext","useEffect","DeviceContext","Statistics","arrayTemp","arrayTDS","arrayPH","arrayTime","seriesTemp","seriesTDS","seriesPH","deviceState","deviceData","getDevice","fetchChartData","length","get","selectedDevice","then","response","data","j","date","Date","getalldata","createdAt","push","getTime","temperature","TDS","PH","values","i","window","dispatchEvent","Event","catch","console","log","seriesArea","name","optionsArea","chart","id","group","type","colors","xaxis","min","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","seriesSmall","optionsSmall","tickAmount","seriesSmall2","optionsSmall2","options","value","label","onChange","event","setTime","optionsDevice","device","selectDevice","setselectDevice","OnChangeDevice","time"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\n\nconst Statistics = () => {\n  const arrayTemp = [];\n  const arrayTDS = [];\n  const arrayPH = [];\n  const arrayTime = [];\n  let seriesTemp = [];\n  let seriesTDS = [];\n  let seriesPH = [];\n\n  const {\n    deviceState: { deviceData },\n    getDevice,\n  } = useContext(DeviceContext);\n  // //get last data\n  useEffect(() => getDevice(), []);\n  function fetchChartData(length) {\n    axios\n      .get(`${url}/data/chart/${selectedDevice}`)\n      .then((response) => {\n        const data = response.data;\n\n        for (let j = 0; j < length; j++) {\n          var date = new Date(data.getalldata[j].createdAt);\n          arrayTime.push(date.getTime());\n          arrayTemp.push(data.getalldata[j].temperature * 1);\n          arrayTDS.push(data.getalldata[j].TDS * 1);\n          arrayPH.push(data.getalldata[j].PH * 1);\n        }\n        var values = [arrayTemp, arrayTDS, arrayPH, arrayTime];\n        var i = 0;\n        while (i < length) {\n          seriesTemp.push([values[3][i], values[0][i]]);\n          seriesTDS.push([values[3][i], values[1][i]]);\n          seriesPH.push([values[3][i], values[2][i]]);\n          i++;\n        }\n        window.dispatchEvent(new Event(\"resize\"));\n      })\n      .catch(() => {\n        console.log(\"Error retrieving data!!!\");\n      });\n  }\n\n  const seriesArea = [\n    {\n      name: \"Temperature\",\n      data: seriesTemp,\n    },\n  ];\n  const optionsArea = {\n    chart: {\n      id: \"area\",\n      group: \"social\",\n      type: \"area\",\n    },\n    colors: [\"#00E396\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true,\n    },\n    toolbar: {\n      autoSelected: \"zoom\",\n    },\n  };\n\n  const seriesSmall = [\n    {\n      name: \"PH\",\n      data: seriesPH,\n    },\n  ];\n  const optionsSmall = {\n    chart: {\n      id: \"ig\",\n      group: \"social\",\n      type: \"area\",\n    },\n    colors: [\"#008FFB\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n      tickAmount: 6,\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true,\n    },\n    toolbar: {\n      autoSelected: \"zoom\",\n    },\n  };\n\n  const seriesSmall2 = [\n    {\n      name: \"TDS\",\n      data: seriesTDS,\n    },\n  ];\n  const optionsSmall2 = {\n    chart: {\n      id: \"li\",\n      group: \"social\",\n      type: \"area\",\n    },\n    colors: [\"#b37700\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n      tickAmount: 6,\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true,\n    },\n    toolbar: {\n      autoSelected: \"zoom\",\n    },\n  };\n  const options = [\n    { value: \"1\", label: \"1 day\" },\n    { value: \"2\", label: \"1 week\" },\n    { value: \"3\", label: \"1 month\" },\n  ];\n\n  const onChange = (event) => setTime(event.value);\n\n  var optionsDevice = [];\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = { value: deviceData[i].device, label: `Device ${i + 1}` };\n    optionsDevice.push(value);\n  }\n  console.log(optionsDevice);\n  const [selectDevice, setselectDevice] = useState(\"Device 1\");\n\n  const OnChangeDevice = (event) => {\n    setselectDevice(event.label);\n  };\n  console.log(selectDevice);\n  var selectedDevice;\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n    }\n  }\n\n  const [time, setTime] = useState(\"1\");\n  if (time === \"1\") {\n    fetchChartData(48);\n    //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"2\") {\n    fetchChartData(336);\n    //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"3\") {\n    fetchChartData(1440);\n    // window.dispatchEvent(new Event(\"resize\"));\n  }\n\n  return (\n    <>\n      <div id=\"wrapper\" className=\"wrapper\">\n        <Select\n          options={optionsDevice}\n          className=\"selecttime\"\n          placeholder={<div>{selectDevice}</div>}\n          onChange={OnChangeDevice}\n        />\n        <Select\n          options={options}\n          className=\"selecttime\"\n          placeholder={<div>1 day</div>}\n          onChange={onChange}\n        />\n        <div className=\"chart-time-series\">\n          <div id=\"chart-small\" className=\"timeseries\">\n            <ReactApexChart\n              options={optionsSmall}\n              series={seriesSmall}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>PH Time Series Chart</h3>\n          </div>\n          <div id=\"chart-small2\" className=\"timeseries\">\n            <ReactApexChart\n              options={optionsSmall2}\n              series={seriesSmall2}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>TDS Time Series Chart</h3>\n          </div>\n\n          <div>\n            <div id=\"chart-area\" className=\"timeseries\">\n              <ReactApexChart\n                options={optionsArea}\n                series={seriesArea}\n                type=\"area\"\n                height={170}\n                width={1040}\n              />\n              <h3>Temperature Time Series Chart</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"wrapper\"></div>\n    </>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}