{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/ESP32_full/src/client/src/views/Device.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from \"react\";\nimport \"./device.css\";\nimport { DataContext } from \"../contexts/DataContext\";\nimport { TypeContext } from \"../contexts/TypeContext\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { TypeModalContext } from \"../contexts/TypeModalContext\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\nimport devicelogo from \"../assets/device.jpg\";\nimport PHImage from \"../assets/PH.png\";\nimport React, { Component } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Button from \"react-bootstrap/Button\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport addButton from \"../assets/addButton.png\";\nimport SingleType from \"../type/SingleType\";\nimport SingleTypeModal from \"../type/SingleTypeModal\";\nimport AddTypeModal from \"../type/AddTypeModal\";\nimport UpdateTypeModal from \"../type/UpdateTypeModal\";\nimport { SetVolumeContext } from \"../contexts/SetVolumeContext\";\nimport Switch from \"react-switch\";\nimport Select from \"react-select\";\nimport Toast from \"react-bootstrap/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Device = () => {\n  _s();\n\n  const {\n    typeState: {\n      configtype,\n      config,\n      configLoading\n    },\n    getConfigType,\n    setShowAddTypeModal,\n    showToast: {\n      show,\n      message,\n      Type\n    },\n    setShowToast\n  } = useContext(TypeContext);\n  const {\n    configState: {\n      currentConfig: {\n        type,\n        TDS,\n        dead_TDS,\n        PH,\n        dead_PH,\n        nutri_Ratio\n      }\n    },\n    getConfigData,\n    currentConfig\n  } = useContext(ConfigContext);\n  const {\n    typeModalState: {\n      typeModal\n    },\n    getTypeModal\n  } = useContext(TypeModalContext);\n  const {\n    setVolumeState: {\n      setVolume: {\n        _id,\n        Nutri_A_full,\n        Nutri_B_full,\n        Acid_So_full,\n        Base_So_full,\n        createdAt\n      }\n    },\n    getSetVolume,\n    addSetVolume,\n    updateVolume,\n    setVolume\n  } = useContext(SetVolumeContext);\n  /*---------------get device ----------------*/\n\n  const {\n    deviceState: {\n      deviceData\n    },\n    getDevice\n  } = useContext(DeviceContext);\n  var optionsDevice = [];\n\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = {\n      value: deviceData[i].device,\n      label: `Device ${i + 1}`\n    };\n    optionsDevice.push(value);\n  }\n\n  const [selectDevice, setselectDevice] = useState(\"Device 1\"); // //get last data\n\n  useEffect(() => getDevice(), []);\n\n  const OnChangeDevice = event => {\n    setselectDevice(event.label);\n  };\n\n  var selectedDevice;\n  let bodyLabelDevice = null;\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n      bodyLabelDevice = deviceData[i].name;\n    }\n  }\n  /*-----------------------------------------*/\n\n\n  useEffect(() => getConfigData(selectedDevice), [selectedDevice]);\n  useEffect(() => getConfigType(), []);\n  useEffect(() => getTypeModal(), []);\n  useEffect(() => getSetVolume(selectedDevice), [selectedDevice]); // Add Device\n\n  const {\n    addDevices\n  } = useContext(DeviceContext);\n  const [newDevice, setNewDevice] = useState({\n    device: \" \"\n  });\n  const {\n    deviceID,\n    name\n  } = newDevice;\n\n  const onChangeNewDeviceForm = event => setNewDevice({ ...newDevice,\n    [event.target.name]: event.target.value\n  });\n\n  const onSubmmit = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        success,\n        message\n      } = await addDevices(newDevice);\n      setNewDevice({\n        deviceID: \"\",\n        name: \"\"\n      });\n      setShowToast({\n        show: true,\n        message,\n        Type: success ? \"info\" : \"danger\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Set Config For Device\n\n\n  const [newConfig, newSetConfig] = useState({\n    TDS: \"\",\n    dead_TDS: \"\",\n    PH: \"\",\n    dead_PH: \"\",\n    nutri_Ratio: \"\"\n  });\n  const {\n    newTDS,\n    newDead_TDS,\n    newPH,\n    newDead_PH,\n    newnutri_Ratio\n  } = newConfig;\n  const {\n    configManual\n  } = useContext(ConfigContext);\n\n  const onSubmmitConfigManual = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        success,\n        message\n      } = await configManual(newConfig);\n      newSetConfig({\n        TDS: \" \",\n        dead_TDS: \" \",\n        PH: \" \",\n        dead_PH: \" \",\n        nutri_Ratio: \" \"\n      });\n      setShowToast({\n        show: true,\n        message,\n        Type: success ? \"info\" : \"danger\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChangeNewSetConfigForm = event => newSetConfig({ ...newConfig,\n    device: selectedDevice,\n    type: \"Manual\",\n    [event.target.name]: event.target.value\n  }); //socket io\n\n\n  const {\n    authState: {\n      user: {\n        username\n      },\n      user\n    }\n  } = useContext(AuthContext);\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:5200\", {\n      reconnection: true,\n      reconnectionDelay: 500,\n      reconnectionAttempts: 10\n    });\n    socket.current.on();\n  }, []);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {//sconsole.log(users);\n    });\n    socket.current.emit(\"getConfig\", user._id);\n    socket.current.on(\"sendConfig\", configManual => {// setData(configManual);\n    });\n  }, [username]); //Personal Type Box\n  //initialize option for personal setting\n\n  var options = [];\n\n  for (let i = 0; i < config.length; i++) {\n    let value = [];\n    value = {\n      value: config[i]._id,\n      label: config[i].type\n    };\n    options.push(value);\n  }\n\n  const [selectTypePersonalState, setSelectTypePersonalState] = useState(\"\");\n\n  const onChangePersonal = event => setSelectTypePersonalState(event.value);\n\n  let body12 = null;\n\n  if (options !== null) {\n    for (let i = 0; i < config.length; i++) {\n      if (options[i].value === selectTypePersonalState) {\n        body12 = /*#__PURE__*/_jsxDEV(SingleType, {\n          config: config[i] = { ...config[i],\n            selectedDevice: selectedDevice\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  }\n\n  let body1 = null;\n\n  if (configLoading) {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (config.length === 0) {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PersonalTypeBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-new-vegetable\",\n          children: \"Click button below to add your profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-new-vegetable\",\n          variant: \"primary\",\n          onClick: setShowAddTypeModal.bind(this, true),\n          children: \"Add new vegetables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PersonalTypeBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PersonalTitle\",\n          children: \"Personal profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"personalAndButton\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            options: options,\n            onChange: onChangePersonal,\n            className: \"selectPersonalType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            placement: \"left\",\n            overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n              children: \"Add a new profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 24\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-floating\",\n              onClick: setShowAddTypeModal.bind(this, true),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: addButton,\n                height: \"15\",\n                width: \"15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), body12]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } //Global Type Box\n  //initialize option for global setting\n\n\n  var optionsGlobal = [];\n\n  for (let i = 0; i < typeModal.length; i++) {\n    let value = [];\n    value = {\n      value: typeModal[i]._id,\n      label: typeModal[i].typeModal\n    };\n    optionsGlobal.push(value);\n  }\n\n  const [selectTypeGlobalState, setSelectTypeGlobalState] = useState(\"\");\n\n  const onChangeGlobal = event => setSelectTypeGlobalState(event.value);\n\n  let bodyTypeGlobal = null;\n\n  if (optionsGlobal !== null) {\n    for (let i = 0; i < typeModal.length; i++) {\n      if (optionsGlobal[i].value === selectTypeGlobalState) {\n        bodyTypeGlobal = /*#__PURE__*/_jsxDEV(SingleTypeModal, {\n          typeModal: typeModal[i] = { ...typeModal[i],\n            selectedDevice: selectedDevice\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  }\n\n  let bodyGlobal = null;\n\n  if (typeModal.length !== 0) {\n    bodyGlobal = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GlobalTypeBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"globalTitle\",\n          children: \"Recommend profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: optionsGlobal,\n          onChange: onChangeGlobal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), bodyTypeGlobal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } // Toggle Button Manual Config\n\n\n  const [checked, setChecked] = useState(false);\n  let bodyConfigManual = null;\n\n  const onChangeChecked = () => {\n    setChecked(!checked);\n  };\n\n  if (checked == true) {\n    bodyConfigManual = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmmitConfigManual,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PH-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pH\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Current PH value set: \", PH]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              max: \"14\",\n              className: \"text\",\n              placeholder: \"Set PH value...\",\n              name: \"PH\",\n              value: newPH,\n              onChange: onChangeNewSetConfigForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_PH\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Current PH threshold value: \", dead_PH]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0.1\",\n              max: \"1\",\n              className: \"text\",\n              placeholder: \"PH threshold...\",\n              name: \"dead_PH\",\n              value: newDead_PH,\n              onChange: onChangeNewSetConfigForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TDS-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tDS\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Current TDS value: \", TDS, \" ppm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"100\",\n              max: \"2000\",\n              className: \"text\",\n              placeholder: \"TDS value...\",\n              name: \"TDS\",\n              value: newTDS,\n              onChange: onChangeNewSetConfigForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_TDS\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Current TDS threshold value: \", dead_TDS, \" ppm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"50\",\n              max: \"300\",\n              className: \"text\",\n              placeholder: \"TDS threshold...\",\n              name: \"dead_TDS\",\n              value: newDead_TDS,\n              onChange: onChangeNewSetConfigForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nutriRatio\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current nutri ratio value: \", nutri_Ratio, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            min: \"0.1\",\n            max: \"10\",\n            className: \"text\",\n            placeholder: \"Nutri ratio value...\",\n            name: \"nutri_Ratio\",\n            value: newnutri_Ratio,\n            onChange: onChangeNewSetConfigForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"button\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } // set volume of bottles\n\n\n  const [newVolume, newSetVolume] = useState({\n    Nutri_A_full: \" \",\n    Nutri_B_full: \" \",\n    Acid_So_full: \" \",\n    Base_So_full: \" \"\n  });\n  const {\n    newNutri_A_full,\n    newNutri_B_full,\n    newAcid_So_full,\n    newBase_So_full\n  } = newVolume;\n\n  const onSubmmitVolumeBottles = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        success,\n        message\n      } = await addSetVolume(newVolume);\n      newSetVolume({\n        Nutri_A_full: \" \",\n        Nutri_B_full: \" \",\n        Acid_So_full: \" \",\n        Base_So_full: \" \"\n      });\n      setShowToast({\n        show: true,\n        message,\n        Type: success ? \"info\" : \"danger\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChangeNewSetVolumeForm = event => newSetVolume({ ...newVolume,\n    device: selectedDevice,\n    Water_full: \"0\",\n    [event.target.name]: event.target.value\n  });\n\n  const onPutVolumeBottles = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        success,\n        message\n      } = await updateVolume(newVolume);\n      newSetVolume({\n        Nutri_A_full: \" \",\n        Nutri_B_full: \" \",\n        Acid_So_full: \" \",\n        Base_So_full: \" \"\n      });\n      setShowToast({\n        show: true,\n        message,\n        Type: success ? \"info\" : \"danger\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onPutNewSetVolumeForm = event => newSetVolume({ ...newVolume,\n    _id,\n    selectedDevice,\n    Water_full: \"0\",\n    [event.target.name]: event.target.value,\n    createdAt\n  }); // Toggle Button Volume Bottles\n\n\n  const [checkedBottle, setCheckedBottle] = useState(false);\n  let bodyVolumeBottle = null;\n\n  const onChangeBottleChecked = () => {\n    setCheckedBottle(!checkedBottle);\n  };\n\n  if (checkedBottle == true) {\n    if (Nutri_A_full === null) {\n      bodyVolumeBottle = /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmmitVolumeBottles,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PH-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pH\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              className: \"text\",\n              placeholder: \"Nutri A bottle...\",\n              name: \"Nutri_A_full\",\n              value: newNutri_A_full,\n              onChange: onChangeNewSetVolumeForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_PH\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              className: \"text\",\n              placeholder: \"Nutri B bottle...\",\n              name: \"Nutri_B_full\",\n              value: newNutri_B_full,\n              onChange: onChangeNewSetVolumeForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TDS-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tDS\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              className: \"text\",\n              placeholder: \"Acid value...\",\n              name: \"Acid_So_full\",\n              value: newAcid_So_full,\n              onChange: onChangeNewSetVolumeForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_TDS\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              className: \"text\",\n              placeholder: \"Bazo bottle...\",\n              name: \"Base_So_full\",\n              value: newBase_So_full,\n              onChange: onChangeNewSetVolumeForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"button\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this);\n    } else {\n      bodyVolumeBottle = /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onPutVolumeBottles,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PH-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pH\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Volume of Nutri A bottle: \", Nutri_A_full, \" ml\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              className: \"text\",\n              placeholder: \"Nutri A bottle...\",\n              name: \"Nutri_A_full\",\n              value: newNutri_A_full,\n              onChange: onPutNewSetVolumeForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_PH\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Volume of Nutri B bottle: \", Nutri_B_full, \" ml\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              className: \"text\",\n              placeholder: \"Nutri B bottle...\",\n              name: \"Nutri_B_full\",\n              value: newNutri_B_full,\n              onChange: onPutNewSetVolumeForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TDS-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tDS\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Volume of Acid bottle: \", Acid_So_full, \" ml\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              className: \"text\",\n              placeholder: \"Acid value...\",\n              name: \"Acid_So_full\",\n              value: newAcid_So_full,\n              onChange: onPutNewSetVolumeForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_TDS\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Volume of Bazo bottle: \", Base_So_full, \" ml\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              className: \"text\",\n              placeholder: \"Bazo bottle...\",\n              name: \"Base_So_full\",\n              value: newBase_So_full,\n              onChange: onPutNewSetVolumeForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"button\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deviceName1\",\n          children: [\"Name of device: \", bodyLabelDevice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            options: optionsDevice,\n            className: \"selecttime\",\n            placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: selectDevice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 28\n            }, this),\n            onChange: OnChangeDevice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-new-vegetable\",\n          children: [\"Current setting is \", type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titleGlobal-Personal\",\n            children: \"Choose your config by your profile or recommend profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionTypePersonalGlobal\",\n            children: [body1, bodyGlobal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AddTypeModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this), configtype !== null && /*#__PURE__*/_jsxDEV(UpdateTypeModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Toast, {\n            show: show,\n            style: {\n              position: \"fixed\",\n              top: \"20%\",\n              right: \"10px\"\n            },\n            className: `bg-${Type} text-white`,\n            onClose: setShowToast.bind(this, {\n              show: false,\n              message: \"\",\n              type: null\n            }),\n            delay: 3000,\n            autohide: true,\n            children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boundingboxManual\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"configManualTitle\",\n            children: \"Config value manual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: checked,\n            onChange: onChangeChecked,\n            onColor: \"#86d3ff\",\n            onHandleColor: \"#2693e6\",\n            handleDiameter: 17,\n            uncheckedIcon: false,\n            checkedIcon: false,\n            boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n            activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n            height: 20,\n            width: 35,\n            className: \"react-switch\",\n            id: \"material-switch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this), bodyConfigManual]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boundingboxManual\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"configManualTitle\",\n            children: \"Config bottles volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: checkedBottle,\n            onChange: onChangeBottleChecked,\n            onColor: \"#86d3ff\",\n            onHandleColor: \"#2693e6\",\n            handleDiameter: 17,\n            uncheckedIcon: false,\n            checkedIcon: false,\n            boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n            activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n            height: 20,\n            width: 35,\n            className: \"react-switch\",\n            id: \"material-switch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), bodyVolumeBottle]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addDevice\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: devicelogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Add your new device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Type device ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"text\",\n              placeholder: \"Device ID...\",\n              name: \"device\",\n              value: deviceID,\n              onChange: onChangeNewDeviceForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Type device name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"text\",\n              placeholder: \"Set Name Device...\",\n              name: \"name\",\n              value: name,\n              onChange: onChangeNewDeviceForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"addButton\",\n              value: \"Add device  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Device, \"u1VfYbvs8ihTOfTI+MPKJZPOaPQ=\");\n\n_c = Device;\nexport default Device;\n\nvar _c;\n\n$RefreshReg$(_c, \"Device\");","map":{"version":3,"sources":["/home/tran/Downloads/ESP32_full/src/client/src/views/Device.js"],"names":["useState","useContext","useEffect","useRef","DataContext","TypeContext","ConfigContext","AuthContext","TypeModalContext","DeviceContext","devicelogo","PHImage","React","Component","io","Button","Tooltip","OverlayTrigger","addButton","SingleType","SingleTypeModal","AddTypeModal","UpdateTypeModal","SetVolumeContext","Switch","Select","Toast","Device","typeState","configtype","config","configLoading","getConfigType","setShowAddTypeModal","showToast","show","message","Type","setShowToast","configState","currentConfig","type","TDS","dead_TDS","PH","dead_PH","nutri_Ratio","getConfigData","typeModalState","typeModal","getTypeModal","setVolumeState","setVolume","_id","Nutri_A_full","Nutri_B_full","Acid_So_full","Base_So_full","createdAt","getSetVolume","addSetVolume","updateVolume","deviceState","deviceData","getDevice","optionsDevice","i","length","value","device","label","push","selectDevice","setselectDevice","OnChangeDevice","event","selectedDevice","bodyLabelDevice","name","addDevices","newDevice","setNewDevice","deviceID","onChangeNewDeviceForm","target","onSubmmit","preventDefault","success","error","console","log","newConfig","newSetConfig","newTDS","newDead_TDS","newPH","newDead_PH","newnutri_Ratio","configManual","onSubmmitConfigManual","onChangeNewSetConfigForm","authState","user","username","socket","current","reconnection","reconnectionDelay","reconnectionAttempts","on","emit","users","options","selectTypePersonalState","setSelectTypePersonalState","onChangePersonal","body12","body1","bind","optionsGlobal","selectTypeGlobalState","setSelectTypeGlobalState","onChangeGlobal","bodyTypeGlobal","bodyGlobal","checked","setChecked","bodyConfigManual","onChangeChecked","newVolume","newSetVolume","newNutri_A_full","newNutri_B_full","newAcid_So_full","newBase_So_full","onSubmmitVolumeBottles","onChangeNewSetVolumeForm","Water_full","onPutVolumeBottles","onPutNewSetVolumeForm","checkedBottle","setCheckedBottle","bodyVolumeBottle","onChangeBottleChecked","position","top","right"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect, useRef } from \"react\";\nimport \"./device.css\";\nimport { DataContext } from \"../contexts/DataContext\";\nimport { TypeContext } from \"../contexts/TypeContext\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { TypeModalContext } from \"../contexts/TypeModalContext\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\n\nimport devicelogo from \"../assets/device.jpg\";\nimport PHImage from \"../assets/PH.png\";\nimport React, { Component } from \"react\";\n\nimport { io } from \"socket.io-client\";\nimport Button from \"react-bootstrap/Button\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport addButton from \"../assets/addButton.png\";\nimport SingleType from \"../type/SingleType\";\nimport SingleTypeModal from \"../type/SingleTypeModal\";\nimport AddTypeModal from \"../type/AddTypeModal\";\nimport UpdateTypeModal from \"../type/UpdateTypeModal\";\nimport { SetVolumeContext } from \"../contexts/SetVolumeContext\";\nimport Switch from \"react-switch\";\nimport Select from \"react-select\";\n\nimport Toast from \"react-bootstrap/Toast\";\n\nconst Device = () => {\n  const {\n    typeState: { configtype, config, configLoading },\n    getConfigType,\n    setShowAddTypeModal,\n    showToast: { show, message, Type },\n    setShowToast,\n  } = useContext(TypeContext);\n\n  const {\n    configState: {\n      currentConfig: { type, TDS, dead_TDS, PH, dead_PH, nutri_Ratio },\n    },\n    getConfigData,\n    currentConfig,\n  } = useContext(ConfigContext);\n\n  const {\n    typeModalState: { typeModal },\n    getTypeModal,\n  } = useContext(TypeModalContext);\n\n  const {\n    setVolumeState: {\n      setVolume: {\n        _id,\n        Nutri_A_full,\n        Nutri_B_full,\n        Acid_So_full,\n        Base_So_full,\n        createdAt,\n      },\n    },\n    getSetVolume,\n    addSetVolume,\n    updateVolume,\n    setVolume,\n  } = useContext(SetVolumeContext);\n\n  /*---------------get device ----------------*/\n  const {\n    deviceState: { deviceData },\n    getDevice,\n  } = useContext(DeviceContext);\n  var optionsDevice = [];\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = { value: deviceData[i].device, label: `Device ${i + 1}` };\n    optionsDevice.push(value);\n  }\n\n  const [selectDevice, setselectDevice] = useState(\"Device 1\");\n  // //get last data\n  useEffect(() => getDevice(), []);\n\n  const OnChangeDevice = (event) => {\n    setselectDevice(event.label);\n  };\n\n  var selectedDevice;\n  let bodyLabelDevice = null;\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n      bodyLabelDevice = deviceData[i].name;\n    }\n  }\n\n  /*-----------------------------------------*/\n\n  useEffect(() => getConfigData(selectedDevice), [selectedDevice]);\n  useEffect(() => getConfigType(), []);\n  useEffect(() => getTypeModal(), []);\n  useEffect(() => getSetVolume(selectedDevice), [selectedDevice]);\n\n  // Add Device\n\n  const { addDevices } = useContext(DeviceContext);\n\n  const [newDevice, setNewDevice] = useState({\n    device: \" \",\n  });\n\n  const { deviceID, name } = newDevice;\n\n  const onChangeNewDeviceForm = (event) =>\n    setNewDevice({\n      ...newDevice,\n      [event.target.name]: event.target.value,\n    });\n\n  const onSubmmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { success, message } = await addDevices(newDevice);\n      setNewDevice({ deviceID: \"\", name: \"\" });\n      setShowToast({ show: true, message, Type: success ? \"info\" : \"danger\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Set Config For Device\n\n  const [newConfig, newSetConfig] = useState({\n    TDS: \"\",\n    dead_TDS: \"\",\n    PH: \"\",\n    dead_PH: \"\",\n    nutri_Ratio: \"\",\n  });\n\n  const { newTDS, newDead_TDS, newPH, newDead_PH, newnutri_Ratio } = newConfig;\n  const { configManual } = useContext(ConfigContext);\n  const onSubmmitConfigManual = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { success, message } = await configManual(newConfig);\n      newSetConfig({\n        TDS: \" \",\n        dead_TDS: \" \",\n        PH: \" \",\n        dead_PH: \" \",\n        nutri_Ratio: \" \",\n      });\n      setShowToast({ show: true, message, Type: success ? \"info\" : \"danger\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChangeNewSetConfigForm = (event) =>\n    newSetConfig({\n      ...newConfig,\n      device: selectedDevice,\n      type: \"Manual\",\n      [event.target.name]: event.target.value,\n    });\n\n  //socket io\n  const {\n    authState: {\n      user: { username },\n      user,\n    },\n  } = useContext(AuthContext);\n  const socket = useRef();\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:5200\", {\n      reconnection: true,\n      reconnectionDelay: 500,\n      reconnectionAttempts: 10,\n    });\n    socket.current.on();\n  }, []);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", (users) => {\n      //sconsole.log(users);\n    });\n    socket.current.emit(\"getConfig\", user._id);\n    socket.current.on(\"sendConfig\", (configManual) => {\n      // setData(configManual);\n    });\n  }, [username]);\n\n  //Personal Type Box\n\n  //initialize option for personal setting\n\n  var options = [];\n  for (let i = 0; i < config.length; i++) {\n    let value = [];\n    value = { value: config[i]._id, label: config[i].type };\n    options.push(value);\n  }\n  const [selectTypePersonalState, setSelectTypePersonalState] = useState(\"\");\n  const onChangePersonal = (event) => setSelectTypePersonalState(event.value);\n  let body12 = null;\n  if (options !== null) {\n    for (let i = 0; i < config.length; i++) {\n      if (options[i].value === selectTypePersonalState) {\n        body12 = (\n          <SingleType\n            config={\n              (config[i] = { ...config[i], selectedDevice: selectedDevice })\n            }\n          />\n        );\n      }\n    }\n  }\n\n  let body1 = null;\n  if (configLoading) {\n    body1 = (\n      <>\n        <h1>Loading</h1>\n      </>\n    );\n  } else if (config.length === 0) {\n    body1 = (\n      <>\n        <div className=\"PersonalTypeBox\">\n          <div className=\"title-new-vegetable\">\n            Click button below to add your profile\n          </div>\n          <Button\n            className=\"button-new-vegetable\"\n            variant=\"primary\"\n            onClick={setShowAddTypeModal.bind(this, true)}\n          >\n            Add new vegetables\n          </Button>\n        </div>\n      </>\n    );\n  } else {\n    body1 = (\n      <>\n        <div className=\"PersonalTypeBox\">\n          <div className=\"PersonalTitle\">Personal profile</div>\n\n          <div className=\"personalAndButton\">\n            <Select\n              options={options}\n              onChange={onChangePersonal}\n              className=\"selectPersonalType\"\n            />\n            <OverlayTrigger\n              placement=\"left\"\n              overlay={<Tooltip>Add a new profile</Tooltip>}\n            >\n              <Button\n                className=\"btn-floating\"\n                onClick={setShowAddTypeModal.bind(this, true)}\n              >\n                <img src={addButton} height=\"15\" width=\"15\" />\n              </Button>\n            </OverlayTrigger>\n          </div>\n\n          {body12}\n        </div>\n      </>\n    );\n  }\n\n  //Global Type Box\n\n  //initialize option for global setting\n  var optionsGlobal = [];\n  for (let i = 0; i < typeModal.length; i++) {\n    let value = [];\n    value = { value: typeModal[i]._id, label: typeModal[i].typeModal };\n    optionsGlobal.push(value);\n  }\n\n  const [selectTypeGlobalState, setSelectTypeGlobalState] = useState(\"\");\n  const onChangeGlobal = (event) => setSelectTypeGlobalState(event.value);\n  let bodyTypeGlobal = null;\n  if (optionsGlobal !== null) {\n    for (let i = 0; i < typeModal.length; i++) {\n      if (optionsGlobal[i].value === selectTypeGlobalState) {\n        bodyTypeGlobal = (\n          <SingleTypeModal\n            typeModal={\n              (typeModal[i] = {\n                ...typeModal[i],\n                selectedDevice: selectedDevice,\n              })\n            }\n          />\n        );\n      }\n    }\n  }\n  let bodyGlobal = null;\n  if (typeModal.length !== 0) {\n    bodyGlobal = (\n      <>\n        <div className=\"GlobalTypeBox\">\n          <div className=\"globalTitle\">Recommend profile</div>\n          <Select options={optionsGlobal} onChange={onChangeGlobal} />\n          {bodyTypeGlobal}\n        </div>\n      </>\n    );\n  }\n\n  // Toggle Button Manual Config\n  const [checked, setChecked] = useState(false);\n  let bodyConfigManual = null;\n  const onChangeChecked = () => {\n    setChecked(!checked);\n  };\n  if (checked == true) {\n    bodyConfigManual = (\n      <>\n        <form onSubmit={onSubmmitConfigManual}>\n          <div className=\"PH-config\">\n            <div className=\"pH\">\n              <h2>Current PH value set: {PH}</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                max=\"14\"\n                className=\"text\"\n                placeholder=\"Set PH value...\"\n                name=\"PH\"\n                value={newPH}\n                onChange={onChangeNewSetConfigForm}\n                required\n              />\n            </div>\n            <div className=\"dead_PH\">\n              <h2>Current PH threshold value: {dead_PH}</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0.1\"\n                max=\"1\"\n                className=\"text\"\n                placeholder=\"PH threshold...\"\n                name=\"dead_PH\"\n                value={newDead_PH}\n                onChange={onChangeNewSetConfigForm}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"TDS-config\">\n            <div className=\"tDS\">\n              <h2>Current TDS value: {TDS} ppm</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"100\"\n                max=\"2000\"\n                className=\"text\"\n                placeholder=\"TDS value...\"\n                name=\"TDS\"\n                value={newTDS}\n                onChange={onChangeNewSetConfigForm}\n                required\n              />\n            </div>\n            <div className=\"dead_TDS\">\n              <h2>Current TDS threshold value: {dead_TDS} ppm</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"50\"\n                max=\"300\"\n                className=\"text\"\n                placeholder=\"TDS threshold...\"\n                name=\"dead_TDS\"\n                value={newDead_TDS}\n                onChange={onChangeNewSetConfigForm}\n                required\n              />\n            </div>\n          </div>\n          {/* <img src={PHImage} /> */}\n          <div className=\"nutriRatio\">\n            <h2>Current nutri ratio value: {nutri_Ratio} </h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0.1\"\n              max=\"10\"\n              className=\"text\"\n              placeholder=\"Nutri ratio value...\"\n              name=\"nutri_Ratio\"\n              value={newnutri_Ratio}\n              onChange={onChangeNewSetConfigForm}\n              required\n            />\n          </div>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      </>\n    );\n  }\n\n  // set volume of bottles\n  const [newVolume, newSetVolume] = useState({\n    Nutri_A_full: \" \",\n    Nutri_B_full: \" \",\n    Acid_So_full: \" \",\n    Base_So_full: \" \",\n  });\n  const { newNutri_A_full, newNutri_B_full, newAcid_So_full, newBase_So_full } =\n    newVolume;\n  const onSubmmitVolumeBottles = async (event) => {\n    event.preventDefault();\n    try {\n      const { success, message } = await addSetVolume(newVolume);\n      newSetVolume({\n        Nutri_A_full: \" \",\n        Nutri_B_full: \" \",\n        Acid_So_full: \" \",\n        Base_So_full: \" \",\n      });\n      setShowToast({ show: true, message, Type: success ? \"info\" : \"danger\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChangeNewSetVolumeForm = (event) =>\n    newSetVolume({\n      ...newVolume,\n      device: selectedDevice,\n      Water_full: \"0\",\n      [event.target.name]: event.target.value,\n    });\n\n  const onPutVolumeBottles = async (event) => {\n    event.preventDefault();\n    try {\n      const { success, message } = await updateVolume(newVolume);\n      newSetVolume({\n        Nutri_A_full: \" \",\n        Nutri_B_full: \" \",\n        Acid_So_full: \" \",\n        Base_So_full: \" \",\n      });\n      setShowToast({ show: true, message, Type: success ? \"info\" : \"danger\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const onPutNewSetVolumeForm = (event) =>\n    newSetVolume({\n      ...newVolume,\n      _id,\n      selectedDevice,\n      Water_full: \"0\",\n      [event.target.name]: event.target.value,\n      createdAt,\n    });\n\n  // Toggle Button Volume Bottles\n\n  const [checkedBottle, setCheckedBottle] = useState(false);\n  let bodyVolumeBottle = null;\n  const onChangeBottleChecked = () => {\n    setCheckedBottle(!checkedBottle);\n  };\n  if (checkedBottle == true) {\n    if (Nutri_A_full === null) {\n      bodyVolumeBottle = (\n        <form onSubmit={onSubmmitVolumeBottles}>\n          <div className=\"PH-config\">\n            <div className=\"pH\">\n              {/* <h2>Volume of Nutri A bottle: {Nutri_A_full} ml</h2> */}\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                className=\"text\"\n                placeholder=\"Nutri A bottle...\"\n                name=\"Nutri_A_full\"\n                value={newNutri_A_full}\n                onChange={onChangeNewSetVolumeForm}\n                required\n              />\n            </div>\n            <div className=\"dead_PH\">\n              {/* <h2>Volume of Nutri B bottle: {Nutri_B_full} ml</h2> */}\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                className=\"text\"\n                placeholder=\"Nutri B bottle...\"\n                name=\"Nutri_B_full\"\n                value={newNutri_B_full}\n                onChange={onChangeNewSetVolumeForm}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"TDS-config\">\n            <div className=\"tDS\">\n              {/* <h2>Current volume of Acid bottle: {Acid_So_full} ml</h2> */}\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                className=\"text\"\n                placeholder=\"Acid value...\"\n                name=\"Acid_So_full\"\n                value={newAcid_So_full}\n                onChange={onChangeNewSetVolumeForm}\n                required\n              />\n            </div>\n            <div className=\"dead_TDS\">\n              {/* <h2>Current volume of Bazo bottle: {Base_So_full} ml</h2> */}\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                className=\"text\"\n                placeholder=\"Bazo bottle...\"\n                name=\"Base_So_full\"\n                value={newBase_So_full}\n                onChange={onChangeNewSetVolumeForm}\n                required\n              />\n            </div>\n          </div>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      );\n    } else {\n      bodyVolumeBottle = (\n        <form onSubmit={onPutVolumeBottles}>\n          <div className=\"PH-config\">\n            <div className=\"pH\">\n              <h2>Volume of Nutri A bottle: {Nutri_A_full} ml</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                className=\"text\"\n                placeholder=\"Nutri A bottle...\"\n                name=\"Nutri_A_full\"\n                value={newNutri_A_full}\n                onChange={onPutNewSetVolumeForm}\n                required\n              />\n            </div>\n            <div className=\"dead_PH\">\n              <h2>Volume of Nutri B bottle: {Nutri_B_full} ml</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                className=\"text\"\n                placeholder=\"Nutri B bottle...\"\n                name=\"Nutri_B_full\"\n                value={newNutri_B_full}\n                onChange={onPutNewSetVolumeForm}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"TDS-config\">\n            <div className=\"tDS\">\n              <h2>Volume of Acid bottle: {Acid_So_full} ml</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                className=\"text\"\n                placeholder=\"Acid value...\"\n                name=\"Acid_So_full\"\n                value={newAcid_So_full}\n                onChange={onPutNewSetVolumeForm}\n                required\n              />\n            </div>\n            <div className=\"dead_TDS\">\n              <h2>Volume of Bazo bottle: {Base_So_full} ml</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                className=\"text\"\n                placeholder=\"Bazo bottle...\"\n                name=\"Base_So_full\"\n                value={newBase_So_full}\n                onChange={onPutNewSetVolumeForm}\n                required\n              />\n            </div>\n          </div>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      );\n    }\n  }\n  return (\n    <>\n      <div className=\"main\">\n        <div className=\"config\">\n          <div className=\"deviceName1\">Name of device: {bodyLabelDevice}</div>\n          <div className=\"select\">\n            <Select\n              options={optionsDevice}\n              className=\"selecttime\"\n              placeholder={<div>{selectDevice}</div>}\n              onChange={OnChangeDevice}\n            />\n          </div>\n\n          <div className=\"title-new-vegetable\">Current setting is {type}</div>\n\n          <div>\n            <div className=\"titleGlobal-Personal\">\n              Choose your config by your profile or recommend profile\n            </div>\n            <div className=\"optionTypePersonalGlobal\">\n              {body1}\n              {bodyGlobal}\n            </div>\n          </div>\n\n          <>\n            <AddTypeModal />\n            {configtype !== null && <UpdateTypeModal />}\n            <Toast\n              show={show}\n              style={{ position: \"fixed\", top: \"20%\", right: \"10px\" }}\n              className={`bg-${Type} text-white`}\n              onClose={setShowToast.bind(this, {\n                show: false,\n                message: \"\",\n                type: null,\n              })}\n              delay={3000}\n              autohide\n            >\n              <Toast.Body>\n                <strong>{message}</strong>\n              </Toast.Body>\n            </Toast>\n          </>\n        </div>\n\n        <>\n          <div className=\"boundingboxManual\">\n            <div className=\"configManualTitle\">Config value manual</div>\n            <Switch\n              checked={checked}\n              onChange={onChangeChecked}\n              onColor=\"#86d3ff\"\n              onHandleColor=\"#2693e6\"\n              handleDiameter={17}\n              uncheckedIcon={false}\n              checkedIcon={false}\n              boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n              activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n              height={20}\n              width={35}\n              className=\"react-switch\"\n              id=\"material-switch\"\n            />\n          </div>\n\n          {bodyConfigManual}\n        </>\n        <>\n          <div className=\"boundingboxManual\">\n            <div className=\"configManualTitle\">Config bottles volume</div>\n            <Switch\n              checked={checkedBottle}\n              onChange={onChangeBottleChecked}\n              onColor=\"#86d3ff\"\n              onHandleColor=\"#2693e6\"\n              handleDiameter={17}\n              uncheckedIcon={false}\n              checkedIcon={false}\n              boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n              activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n              height={20}\n              width={35}\n              className=\"react-switch\"\n              id=\"material-switch\"\n            />\n          </div>\n\n          {bodyVolumeBottle}\n        </>\n      </div>\n\n      <div className=\"addDevice\">\n        <div className=\"device-box\">\n          <img src={devicelogo} />\n          <div className=\"form\">\n            <h1>Add your new device</h1>\n            <form onSubmit={onSubmmit}>\n              <div>Type device ID</div>\n              <input\n                type=\"text\"\n                className=\"text\"\n                placeholder=\"Device ID...\"\n                name=\"device\"\n                value={deviceID}\n                onChange={onChangeNewDeviceForm}\n                required\n              />\n              <div>Type device name</div>\n              <input\n                type=\"text\"\n                className=\"text\"\n                placeholder=\"Set Name Device...\"\n                name=\"name\"\n                value={name}\n                onChange={onChangeNewDeviceForm}\n                required\n              />\n              <input type=\"submit\" className=\"addButton\" value=\"Add device  \" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Device;\n"]},"metadata":{},"sourceType":"module"}