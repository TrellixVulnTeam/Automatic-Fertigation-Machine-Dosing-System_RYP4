{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/backend/client/src/views/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useContext, useEffect } from \"react\";\nimport image from \"../assets/iot.jpg\";\nimport { DataContext } from \"../contexts/DataContext\";\nimport { StatusContext } from \"../contexts/StatusContext\";\nimport { TypeContext } from \"../contexts/TypeContext\";\nimport \"./views.css\";\nimport dosingmachine from \"../assets/dosingmachine.png\";\nimport { io } from \"socket.io-client\";\nimport Select from \"react-select\";\nimport PHicon from \"../assets/PHlogo.png\";\nimport tempIcon from \"../assets/temp.png\";\nimport tdsIcon from \"../assets/tds.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  //get username\n  const {\n    authState: {\n      user: {\n        username,\n        _id\n      }\n    }\n  } = useContext(AuthContext);\n  const [data, setData] = useState({\n    data: []\n  });\n  const {\n    dataState: {\n      data: {\n        temperature,\n        TDS,\n        PH,\n        createdAt\n      },\n      dataLoading\n    },\n    getData\n  } = useContext(DataContext);\n  const {\n    statusState: {\n      status: {\n        getLastConfigType,\n        state\n      }\n    },\n    getStatus\n  } = useContext(StatusContext);\n  const {\n    typeState: {\n      config: {\n        type\n      },\n      configLoading\n    },\n    getConfigType\n  } = useContext(TypeContext); //get last data\n\n  useEffect(() => getData(), [data]);\n  useEffect(() => getStatus(), [state]);\n  useEffect(() => getConfigType(), []);\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:5200\", {\n      reconnection: true,\n      reconnectionDelay: 500,\n      reconnectionAttempts: 10\n    });\n    socket.current.on();\n  }, []);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", _id);\n    socket.current.on(\"getUsers\", users => {\n      console.log(users);\n    });\n    socket.current.emit(\"getData\", _id);\n    socket.current.on(\"sendData\", data => {\n      setData(data);\n    });\n    socket.current.emit(\"getState\", _id);\n    socket.current.on(\"sendState\", sendState => {//setState(sendState);\n    });\n  }, [username]);\n  let state_style;\n\n  if (state === \"offline\") {\n    state_style = {\n      backgroundColor: \"grey\"\n    };\n  } else if (state === \"online\") {\n    state_style = {\n      backgroundColor: \"#4d94ff\"\n    };\n  }\n\n  const options = [{\n    value: \"chocolate\",\n    label: \"Chocolate\"\n  }, {\n    value: \"strawberry\",\n    label: \"Strawberry\"\n  }, {\n    value: \"vanilla\",\n    label: \"Vanilla\"\n  }];\n  let body1 = null;\n\n  if (configLoading) {\n    body1 = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this); // } else if (type.length === 0) {\n    //   body1 = (\n    //     <>\n    //       <h1>Adding some vegetables</h1>\n    //     </>\n    //   );\n  } else {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"test\"\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-mute\",\n        children: [\"Last Time Update: \", createdAt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"insights\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PH-TDS\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"PH\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: PHicon,\n              className: \"icon-sen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"PH\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: PH\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"Time update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TDS\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tdsIcon,\n              className: \"icon-sen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"TDS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: TDS\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"PPM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: tempIcon,\n            className: \"icon-sen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"middle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Temperature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [temperature, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"\\xB0C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), body1, /*#__PURE__*/_jsxDEV(Select, {\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"menu-btn1\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"currentColor\",\n            className: \"bi bi-list\",\n            viewBox: \"0 0 16 16\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userPart\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"50\",\n            height: \"50\",\n            fill: \"currentColor\",\n            className: \"user-icon\",\n            viewBox: \"0 0 16 16\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userName\",\n            children: [\"Welcome \", username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userDevice\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"My Devices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"devices\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dosingmachine\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: dosingmachine,\n                className: \"icon-device\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-circle\",\n                style: state_style\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"string\",\n                children: [\"Dosing \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 26\n                }, this), \"Machine\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"State : \", state]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"UXKo71wJ39XSj4xInJUGOOuL/A0=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/tran/Downloads/backend/client/src/views/Dashboard.js"],"names":["React","useRef","useState","AuthContext","useContext","useEffect","image","DataContext","StatusContext","TypeContext","dosingmachine","io","Select","PHicon","tempIcon","tdsIcon","Dashboard","authState","user","username","_id","data","setData","dataState","temperature","TDS","PH","createdAt","dataLoading","getData","statusState","status","getLastConfigType","state","getStatus","typeState","config","type","configLoading","getConfigType","socket","current","reconnection","reconnectionDelay","reconnectionAttempts","on","emit","users","console","log","sendState","state_style","backgroundColor","options","value","label","body1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,aAAP;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM;AACJC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ;AADG;AADP,MAIFhB,UAAU,CAACD,WAAD,CAJd;AAMA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC;AAAEmB,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;AACA,QAAM;AACJE,IAAAA,SAAS,EAAE;AACTF,MAAAA,IAAI,EAAE;AAAEG,QAAAA,WAAF;AAAeC,QAAAA,GAAf;AAAoBC,QAAAA,EAApB;AAAwBC,QAAAA;AAAxB,OADG;AAETC,MAAAA;AAFS,KADP;AAKJC,IAAAA;AALI,MAMFzB,UAAU,CAACG,WAAD,CANd;AAQA,QAAM;AACJuB,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,iBAAF;AAAqBC,QAAAA;AAArB;AADG,KADT;AAIJC,IAAAA;AAJI,MAKF9B,UAAU,CAACI,aAAD,CALd;AAOA,QAAM;AACJ2B,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF,OADC;AAETC,MAAAA;AAFS,KADP;AAKJC,IAAAA;AALI,MAMFnC,UAAU,CAACK,WAAD,CANd,CAxBsB,CAgCtB;;AACAJ,EAAAA,SAAS,CAAC,MAAMwB,OAAO,EAAd,EAAkB,CAACR,IAAD,CAAlB,CAAT;AACAhB,EAAAA,SAAS,CAAC,MAAM6B,SAAS,EAAhB,EAAoB,CAACD,KAAD,CAApB,CAAT;AACA5B,EAAAA,SAAS,CAAC,MAAMkC,aAAa,EAApB,EAAwB,EAAxB,CAAT;AAEA,QAAMC,MAAM,GAAGvC,MAAM,EAArB;AAEAI,EAAAA,SAAS,CAAC,MAAM;AACdmC,IAAAA,MAAM,CAACC,OAAP,GAAiB9B,EAAE,CAAC,qBAAD,EAAwB;AACzC+B,MAAAA,YAAY,EAAE,IAD2B;AAEzCC,MAAAA,iBAAiB,EAAE,GAFsB;AAGzCC,MAAAA,oBAAoB,EAAE;AAHmB,KAAxB,CAAnB;AAKAJ,IAAAA,MAAM,CAACC,OAAP,CAAeI,EAAf;AACD,GAPQ,EAON,EAPM,CAAT;AASAxC,EAAAA,SAAS,CAAC,MAAM;AACdmC,IAAAA,MAAM,CAACC,OAAP,CAAeK,IAAf,CAAoB,SAApB,EAA+B1B,GAA/B;AACAoB,IAAAA,MAAM,CAACC,OAAP,CAAeI,EAAf,CAAkB,UAAlB,EAA+BE,KAAD,IAAW;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAFD;AAGAP,IAAAA,MAAM,CAACC,OAAP,CAAeK,IAAf,CAAoB,SAApB,EAA+B1B,GAA/B;AACAoB,IAAAA,MAAM,CAACC,OAAP,CAAeI,EAAf,CAAkB,UAAlB,EAA+BxB,IAAD,IAAU;AACtCC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAFD;AAGAmB,IAAAA,MAAM,CAACC,OAAP,CAAeK,IAAf,CAAoB,UAApB,EAAgC1B,GAAhC;AACAoB,IAAAA,MAAM,CAACC,OAAP,CAAeI,EAAf,CAAkB,WAAlB,EAAgCK,SAAD,IAAe,CAC5C;AACD,KAFD;AAGD,GAbQ,EAaN,CAAC/B,QAAD,CAbM,CAAT;AAeA,MAAIgC,WAAJ;;AACA,MAAIlB,KAAK,KAAK,SAAd,EAAyB;AACvBkB,IAAAA,WAAW,GAAG;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACD,GAFD,MAEO,IAAInB,KAAK,KAAK,QAAd,EAAwB;AAC7BkB,IAAAA,WAAW,GAAG;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACD;;AAED,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAHc,CAAhB;AAMA,MAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAIlB,aAAJ,EAAmB;AACjBkB,IAAAA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR,CADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACD,GARD,MAQO;AACLA,IAAAA,KAAK,gBAAG;AAAA;AAAA,qBAAR;AACD;;AACD,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,yCAAgD7B,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,IAAf;AAAA,oCACE;AAAK,cAAA,GAAG,EAAEd,MAAV;AAAkB,cAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,4BAAKa;AAAL;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAO,gBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAK,cAAA,GAAG,EAAEX,OAAV;AAAmB,cAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,4BAAKU;AAAL;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAO,gBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAwBE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEX,QAAV;AAAoB,YAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,2BAAKU,WAAL;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAO,gBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAqCGgC,KArCH,eAsCE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,cAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0CE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAQ,UAAA,EAAE,EAAC,WAAX;AAAA,iCACE;AACE,YAAA,KAAK,EAAC,4BADR;AAEE,YAAA,KAAK,EAAC,IAFR;AAGE,YAAA,MAAM,EAAC,IAHT;AAIE,YAAA,IAAI,EAAC,cAJP;AAKE,YAAA,SAAS,EAAC,YALZ;AAME,YAAA,OAAO,EAAC,WANV;AAAA,mCAQE;AACE,cAAA,QAAQ,EAAC,SADX;AAEE,cAAA,CAAC,EAAC;AAFJ;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AACE,YAAA,KAAK,EAAC,4BADR;AAEE,YAAA,KAAK,EAAC,IAFR;AAGE,YAAA,MAAM,EAAC,IAHT;AAIE,YAAA,IAAI,EAAC,cAJP;AAKE,YAAA,SAAS,EAAC,WALZ;AAME,YAAA,OAAO,EAAC,WANV;AAAA,oCAQE;AAAM,cAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AACE,cAAA,QAAQ,EAAC,SADX;AAEE,cAAA,CAAC,EAAC;AAFJ;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCAAmClC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACE;AAAK,gBAAA,GAAG,EAAET,aAAV;AAAyB,gBAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAA+B,gBAAA,KAAK,EAAEyC;AAAtC;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAK,gBAAA,SAAS,EAAC,QAAf;AAAA,mDACS;AAAA;AAAA;AAAA;AAAA,wBADT;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAOE;AAAA,uCAAalB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmDE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAE3B;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,YA1CF;AAAA,kBADF;AAoGD,CA7LD;;GAAMU,S;;KAAAA,S;AA8LN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useContext, useEffect } from \"react\";\nimport image from \"../assets/iot.jpg\";\nimport { DataContext } from \"../contexts/DataContext\";\nimport { StatusContext } from \"../contexts/StatusContext\";\nimport { TypeContext } from \"../contexts/TypeContext\";\nimport \"./views.css\";\nimport dosingmachine from \"../assets/dosingmachine.png\";\nimport { io } from \"socket.io-client\";\nimport Select from \"react-select\";\n\nimport PHicon from \"../assets/PHlogo.png\";\nimport tempIcon from \"../assets/temp.png\";\nimport tdsIcon from \"../assets/tds.png\";\n\nconst Dashboard = () => {\n  //get username\n  const {\n    authState: {\n      user: { username, _id },\n    },\n  } = useContext(AuthContext);\n\n  const [data, setData] = useState({ data: [] });\n  const {\n    dataState: {\n      data: { temperature, TDS, PH, createdAt },\n      dataLoading,\n    },\n    getData,\n  } = useContext(DataContext);\n\n  const {\n    statusState: {\n      status: { getLastConfigType, state },\n    },\n    getStatus,\n  } = useContext(StatusContext);\n\n  const {\n    typeState: {\n      config: { type },\n      configLoading,\n    },\n    getConfigType,\n  } = useContext(TypeContext);\n\n  //get last data\n  useEffect(() => getData(), [data]);\n  useEffect(() => getStatus(), [state]);\n  useEffect(() => getConfigType(), []);\n\n  const socket = useRef();\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:5200\", {\n      reconnection: true,\n      reconnectionDelay: 500,\n      reconnectionAttempts: 10,\n    });\n    socket.current.on();\n  }, []);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", _id);\n    socket.current.on(\"getUsers\", (users) => {\n      console.log(users);\n    });\n    socket.current.emit(\"getData\", _id);\n    socket.current.on(\"sendData\", (data) => {\n      setData(data);\n    });\n    socket.current.emit(\"getState\", _id);\n    socket.current.on(\"sendState\", (sendState) => {\n      //setState(sendState);\n    });\n  }, [username]);\n\n  let state_style;\n  if (state === \"offline\") {\n    state_style = { backgroundColor: \"grey\" };\n  } else if (state === \"online\") {\n    state_style = { backgroundColor: \"#4d94ff\" };\n  }\n\n  const options = [\n    { value: \"chocolate\", label: \"Chocolate\" },\n    { value: \"strawberry\", label: \"Strawberry\" },\n    { value: \"vanilla\", label: \"Vanilla\" },\n  ];\n\n  let body1 = null;\n\n  if (configLoading) {\n    body1 = <h1>Loading</h1>;\n    // } else if (type.length === 0) {\n    //   body1 = (\n    //     <>\n    //       <h1>Adding some vegetables</h1>\n    //     </>\n    //   );\n  } else {\n    body1 = <>test</>;\n  }\n  return (\n    <>\n      <main>\n        <small className=\"text-mute\">Last Time Update: {createdAt}</small>\n        <div className=\"insights\">\n          <div className=\"PH-TDS\">\n            <div className=\"PH\">\n              <img src={PHicon} className=\"icon-sen\" />\n              <div className=\"middle\">\n                <div className=\"left\">\n                  <h3>PH</h3>\n                  <h1>{PH}</h1>\n                </div>\n                <small className=\"text-muted\">Time update</small>\n              </div>\n            </div>\n\n            <div className=\"TDS\">\n              <img src={tdsIcon} className=\"icon-sen\" />\n              <div className=\"middle\">\n                <div className=\"left\">\n                  <h3>TDS</h3>\n                  <h1>{TDS}</h1>\n                </div>\n                <small className=\"text-muted\">PPM</small>\n              </div>\n            </div>\n          </div>\n          <div className=\"temperature\">\n            <img src={tempIcon} className=\"icon-sen\" />\n            <div className=\"middle\">\n              <div className=\"left\">\n                <h3>Temperature</h3>\n                <h1>{temperature} </h1>\n                <small className=\"text-muted\">°C</small>\n              </div>\n            </div>\n          </div>\n        </div>\n        {body1}\n        <Select options={options} />\n      </main>\n\n      <div className=\"right\">\n        <div className=\"top\">\n          <button id=\"menu-btn1\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-list\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div className=\"userPart\">\n          <div className=\"user\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"50\"\n              height=\"50\"\n              fill=\"currentColor\"\n              className=\"user-icon\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n              <path\n                fillRule=\"evenodd\"\n                d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n              />\n            </svg>\n            <div className=\"userName\">Welcome {username}</div>\n          </div>\n          <div className=\"userDevice\">\n            <div>My Devices</div>\n            <div className=\"devices\">\n              <div className=\"dosingmachine\">\n                <img src={dosingmachine} className=\"icon-device\" />\n                <div className=\"status-circle\" style={state_style}></div>\n                <div className=\"string\">\n                  Dosing <br />\n                  Machine\n                </div>\n                <h2>State : {state}</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"img\">\n          <img src={image} />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}