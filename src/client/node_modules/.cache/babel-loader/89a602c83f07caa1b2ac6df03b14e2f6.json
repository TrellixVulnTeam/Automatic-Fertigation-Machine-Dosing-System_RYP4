{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/LVTN/client/src/views/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useContext, useEffect } from \"react\";\nimport image from \"../assets/iot.jpg\";\nimport { DataContext } from \"../contexts/DataContext\";\nimport { StatusContext } from \"../contexts/StatusContext\";\nimport { TypeContext } from \"../contexts/TypeContext\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\nimport \"./views.css\";\nimport dosingmachine from \"../assets/dosingmachine.png\";\nimport { io } from \"socket.io-client\";\nimport Select from \"react-select\";\nimport PHicon from \"../assets/PHlogo.png\";\nimport tempIcon from \"../assets/temp.png\";\nimport tdsIcon from \"../assets/tds.png\";\nimport addButton from \"../assets/addButton.png\";\nimport SingleType from \"../type/SingleType\";\nimport AddTypeModal from \"../type/AddTypeModal\";\nimport UpdateTypeModal from \"../type/UpdateTypeModal\";\nimport Button from \"react-bootstrap/Button\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Toast from \"react-bootstrap/Toast\";\nimport ActionButtons from \"../type/ActionButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  //get username\n  const {\n    authState: {\n      user: {\n        username,\n        _id\n      }\n    }\n  } = useContext(AuthContext);\n  const [data, setData] = useState({\n    data: []\n  });\n  const {\n    dataState: {\n      data: {\n        temperature,\n        TDS,\n        PH,\n        createdAt\n      },\n      dataLoading\n    },\n    getData\n  } = useContext(DataContext);\n  const [status, setStatus] = useState({\n    status: []\n  });\n  const {\n    statusState: {\n      status: {\n        state\n      }\n    },\n    getStatus\n  } = useContext(StatusContext);\n  const {\n    typeState: {\n      configtype,\n      config,\n      configLoading\n    },\n    getConfigType,\n    setShowAddTypeModal,\n    showToast: {\n      show,\n      message,\n      Type\n    },\n    setShowToast\n  } = useContext(TypeContext);\n  const {\n    configState: {\n      currentConfig\n    },\n    getConfigData\n  } = useContext(ConfigContext);\n  useEffect(() => getConfigData(), [currentConfig]);\n  const [selectTypeState, setSelectTypeState] = useState(); //get last data\n\n  useEffect(() => getConfigData(), []);\n  useEffect(() => getData(), [data]);\n  useEffect(() => getStatus(), [state]);\n  useEffect(() => getConfigType(), []);\n  console.log(currentConfig);\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:5200\", {\n      reconnection: true,\n      reconnectionDelay: 500,\n      reconnectionAttempts: 10\n    });\n    socket.current.on();\n  }, []);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", _id);\n    socket.current.on(\"getUsers\", users => {\n      console.log(users);\n    });\n    socket.current.emit(\"getData\", _id);\n    socket.current.on(\"sendData\", data => {\n      setData(data);\n    });\n    socket.current.emit(\"getState\", _id);\n    socket.current.on(\"sendState\", sendState => {\n      setStatus(sendState);\n    });\n  }, [username]);\n  let state_style;\n\n  if (state === \"offline\") {\n    state_style = {\n      backgroundColor: \"grey\"\n    };\n  } else if (state === \"online\") {\n    state_style = {\n      backgroundColor: \"#4d94ff\"\n    };\n  }\n\n  var options = [];\n\n  for (let i = 0; i < config.length; i++) {\n    let value = [];\n    value = {\n      value: config[i]._id,\n      label: config[i].type\n    };\n    options.push(value);\n  }\n\n  console.log(config);\n  let body1 = null;\n\n  if (configLoading) {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (config.length === 0) {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Click button below to add a new vegetables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: setShowAddTypeModal.bind(this, true),\n        children: \"Add new vegetables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        options: options,\n        onChange: e => {\n          console.log(e);\n          const typeState = e.value;\n          setSelectTypeState(typeState);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Current setting is \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singleType\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"valueName\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typeName\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"TDS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_TDSName\",\n            children: \"dead TDS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"PHName\",\n            children: \"PH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_PHName\",\n            children: \"dead PH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nutri_ratioName\",\n            children: \"Nutri ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        placement: \"left\",\n        overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n          children: \"Add a new vegetable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 20\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-floating\",\n          onClick: setShowAddTypeModal.bind(this, true),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: addButton,\n            height: \"20\",\n            width: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), config.map(options => /*#__PURE__*/_jsxDEV(SingleType, {\n        config: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-mute\",\n        children: [\"Last Time Update: \", createdAt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"insights\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PH-TDS\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"PH\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: PHicon,\n              className: \"icon-sen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"PH\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: PH\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"Time update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TDS\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tdsIcon,\n              className: \"icon-sen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"TDS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: TDS\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"PPM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: tempIcon,\n            className: \"icon-sen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"middle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Temperature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [temperature, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"\\xB0C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), body1, /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AddTypeModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), configtype !== null && /*#__PURE__*/_jsxDEV(UpdateTypeModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          show: show,\n          style: {\n            position: \"fixed\",\n            top: \"20%\",\n            right: \"10px\"\n          },\n          className: `bg-${Type} text-white`,\n          onClose: setShowToast.bind(this, {\n            show: false,\n            message: \"\",\n            type: null\n          }),\n          delay: 3000,\n          autohide: true,\n          children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"menu-btn1\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"currentColor\",\n            className: \"bi bi-list\",\n            viewBox: \"0 0 16 16\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userPart\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"50\",\n            height: \"50\",\n            fill: \"currentColor\",\n            className: \"user-icon\",\n            viewBox: \"0 0 16 16\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userName\",\n            children: [\"Welcome \", username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userDevice\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"My Devices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"devices\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dosingmachine\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: dosingmachine,\n                className: \"icon-device\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-circle\",\n                style: state_style\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"string\",\n                children: [\"Dosing \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 26\n                }, this), \"Machine\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"State : \", state]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"V3gtgc8uKg9XvzmcQZQ8gbyC8XA=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/tran/Downloads/LVTN/client/src/views/Dashboard.js"],"names":["React","useRef","useState","AuthContext","useContext","useEffect","image","DataContext","StatusContext","TypeContext","ConfigContext","dosingmachine","io","Select","PHicon","tempIcon","tdsIcon","addButton","SingleType","AddTypeModal","UpdateTypeModal","Button","Tooltip","OverlayTrigger","Toast","ActionButtons","Dashboard","authState","user","username","_id","data","setData","dataState","temperature","TDS","PH","createdAt","dataLoading","getData","status","setStatus","statusState","state","getStatus","typeState","configtype","config","configLoading","getConfigType","setShowAddTypeModal","showToast","show","message","Type","setShowToast","configState","currentConfig","getConfigData","selectTypeState","setSelectTypeState","console","log","socket","current","reconnection","reconnectionDelay","reconnectionAttempts","on","emit","users","sendState","state_style","backgroundColor","options","i","length","value","label","type","push","body1","bind","e","map","position","top","right"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useContext, useEffect } from \"react\";\nimport image from \"../assets/iot.jpg\";\nimport { DataContext } from \"../contexts/DataContext\";\nimport { StatusContext } from \"../contexts/StatusContext\";\nimport { TypeContext } from \"../contexts/TypeContext\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\nimport \"./views.css\";\nimport dosingmachine from \"../assets/dosingmachine.png\";\nimport { io } from \"socket.io-client\";\nimport Select from \"react-select\";\n\nimport PHicon from \"../assets/PHlogo.png\";\nimport tempIcon from \"../assets/temp.png\";\nimport tdsIcon from \"../assets/tds.png\";\nimport addButton from \"../assets/addButton.png\";\nimport SingleType from \"../type/SingleType\";\nimport AddTypeModal from \"../type/AddTypeModal\";\nimport UpdateTypeModal from \"../type/UpdateTypeModal\";\nimport Button from \"react-bootstrap/Button\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Toast from \"react-bootstrap/Toast\";\nimport ActionButtons from \"../type/ActionButton\";\nconst Dashboard = () => {\n  //get username\n  const {\n    authState: {\n      user: { username, _id },\n    },\n  } = useContext(AuthContext);\n\n  const [data, setData] = useState({ data: [] });\n  const {\n    dataState: {\n      data: { temperature, TDS, PH, createdAt },\n\n      dataLoading,\n    },\n    getData,\n  } = useContext(DataContext);\n\n  const [status, setStatus] = useState({ status: [] });\n  const {\n    statusState: {\n      status: { state },\n    },\n    getStatus,\n  } = useContext(StatusContext);\n\n  const {\n    typeState: { configtype, config, configLoading },\n    getConfigType,\n    setShowAddTypeModal,\n    showToast: { show, message, Type },\n    setShowToast,\n  } = useContext(TypeContext);\n\n  const {\n    configState: { currentConfig },\n    getConfigData,\n  } = useContext(ConfigContext);\n\n  useEffect(() => getConfigData(), [currentConfig]);\n\n  const [selectTypeState, setSelectTypeState] = useState();\n\n  //get last data\n  useEffect(() => getConfigData(), []);\n  useEffect(() => getData(), [data]);\n  useEffect(() => getStatus(), [state]);\n  useEffect(() => getConfigType(), []);\n  console.log(currentConfig);\n  const socket = useRef();\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:5200\", {\n      reconnection: true,\n      reconnectionDelay: 500,\n      reconnectionAttempts: 10,\n    });\n    socket.current.on();\n  }, []);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", _id);\n    socket.current.on(\"getUsers\", (users) => {\n      console.log(users);\n    });\n    socket.current.emit(\"getData\", _id);\n    socket.current.on(\"sendData\", (data) => {\n      setData(data);\n    });\n    socket.current.emit(\"getState\", _id);\n    socket.current.on(\"sendState\", (sendState) => {\n      setStatus(sendState);\n    });\n  }, [username]);\n\n  let state_style;\n  if (state === \"offline\") {\n    state_style = { backgroundColor: \"grey\" };\n  } else if (state === \"online\") {\n    state_style = { backgroundColor: \"#4d94ff\" };\n  }\n\n  var options = [];\n  for (let i = 0; i < config.length; i++) {\n    let value = [];\n    value = { value: config[i]._id, label: config[i].type };\n    options.push(value);\n  }\n  console.log(config);\n\n  let body1 = null;\n  if (configLoading) {\n    body1 = (\n      <>\n        <h1>Loading</h1>\n      </>\n    );\n  } else if (config.length === 0) {\n    body1 = (\n      <>\n        <h3>Click button below to add a new vegetables</h3>\n        <Button\n          variant=\"primary\"\n          onClick={setShowAddTypeModal.bind(this, true)}\n        >\n          Add new vegetables\n        </Button>\n      </>\n    );\n  } else {\n    body1 = (\n      <>\n        <Select\n          options={options}\n          onChange={(e) => {\n            console.log(e);\n            const typeState = e.value;\n            setSelectTypeState(typeState);\n          }}\n        />\n\n        <div>Current setting is </div>\n        <div className=\"singleType\">\n          <div className=\"valueName\">\n            <div className=\"typeName\">Type</div>\n            <div>TDS</div>\n            <div className=\"dead_TDSName\">dead TDS</div>\n            <div className=\"PHName\">PH</div>\n            <div className=\"dead_PHName\">dead PH</div>\n            <div className=\"nutri_ratioName\">Nutri ratio</div>\n          </div>\n        </div>\n        <OverlayTrigger\n          placement=\"left\"\n          overlay={<Tooltip>Add a new vegetable</Tooltip>}\n        >\n          <Button\n            className=\"btn-floating\"\n            onClick={setShowAddTypeModal.bind(this, true)}\n          >\n            <img src={addButton} height=\"20\" width=\"20\" />\n          </Button>\n        </OverlayTrigger>\n        {config.map((options) => (\n          <SingleType config={options} />\n        ))}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <main>\n        <small className=\"text-mute\">Last Time Update: {createdAt}</small>\n        <div className=\"insights\">\n          <div className=\"PH-TDS\">\n            <div className=\"PH\">\n              <img src={PHicon} className=\"icon-sen\" />\n              <div className=\"middle\">\n                <div className=\"left\">\n                  <h3>PH</h3>\n                  <h1>{PH}</h1>\n                </div>\n                <small className=\"text-muted\">Time update</small>\n              </div>\n            </div>\n            <div className=\"TDS\">\n              <img src={tdsIcon} className=\"icon-sen\" />\n              <div className=\"middle\">\n                <div className=\"left\">\n                  <h3>TDS</h3>\n                  <h1>{TDS}</h1>\n                </div>\n                <small className=\"text-muted\">PPM</small>\n              </div>\n            </div>\n          </div>\n          <div className=\"temperature\">\n            <img src={tempIcon} className=\"icon-sen\" />\n            <div className=\"middle\">\n              <div className=\"left\">\n                <h3>Temperature</h3>\n                <h1>{temperature} </h1>\n                <small className=\"text-muted\">°C</small>\n              </div>\n            </div>\n          </div>\n        </div>\n        {body1}\n        <>\n          <AddTypeModal />\n          {configtype !== null && <UpdateTypeModal />}\n          <Toast\n            show={show}\n            style={{ position: \"fixed\", top: \"20%\", right: \"10px\" }}\n            className={`bg-${Type} text-white`}\n            onClose={setShowToast.bind(this, {\n              show: false,\n              message: \"\",\n              type: null,\n            })}\n            delay={3000}\n            autohide\n          >\n            <Toast.Body>\n              <strong>{message}</strong>\n            </Toast.Body>\n          </Toast>\n        </>\n      </main>\n      <div className=\"right\">\n        <div className=\"top\">\n          <button id=\"menu-btn1\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-list\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div className=\"userPart\">\n          <div className=\"user\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"50\"\n              height=\"50\"\n              fill=\"currentColor\"\n              className=\"user-icon\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n              <path\n                fillRule=\"evenodd\"\n                d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n              />\n            </svg>\n            <div className=\"userName\">Welcome {username}</div>\n          </div>\n          <div className=\"userDevice\">\n            <div>My Devices</div>\n            <div className=\"devices\">\n              <div className=\"dosingmachine\">\n                <img src={dosingmachine} className=\"icon-device\" />\n                <div className=\"status-circle\" style={state_style}></div>\n                <div className=\"string\">\n                  Dosing <br />\n                  Machine\n                </div>\n                <h2>State : {state}</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"img\">\n          <img src={image} />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}