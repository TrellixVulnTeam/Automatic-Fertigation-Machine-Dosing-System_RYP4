{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = () => {\n  _s();\n\n  const arrayTime = [];\n  let seriesTemp = [];\n  let seriesTDS = [];\n  let seriesPH = [];\n  const {\n    deviceState: {\n      deviceData\n    },\n    getDevice\n  } = useContext(DeviceContext); // //get last data\n\n  useEffect(() => getDevice(), []);\n\n  function fetchChartData(time, select) {\n    axios.get(`${url}/data/chart/${select}/${time}`).then(response => {\n      const data = response.data;\n      arrayTime.push(...data.getalldata[3]);\n      seriesTemp.push(...data.getalldata[0]);\n      seriesTDS.push(...data.getalldata[1]);\n      seriesPH.push(...data.getalldata[2]);\n      window.dispatchEvent(new Event(\"resize\"));\n    }).catch(() => {\n      console.log(\"Error retrieving data!!!\");\n    });\n  }\n\n  var optionsDevice = [];\n\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = {\n      value: deviceData[i].device,\n      label: `Device ${i + 1}`\n    };\n    optionsDevice.push(value);\n  }\n\n  console.log(optionsDevice);\n  const [selectDevice, setselectDevice] = useState(\"Device 1\");\n\n  const OnChangeDevice = event => {\n    setselectDevice(event.label);\n  };\n\n  console.log(selectDevice);\n  var selectedDevice;\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n    }\n  }\n\n  const [chart, setChart] = useState({\n    seriesTemp: [{\n      name: \"Temperature\",\n      data: []\n    }],\n    optionsTemp: {\n      chart: {\n        id: \"area\",\n        group: \"social\",\n        type: \"area\"\n      },\n      colors: [\"#00E396\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: []\n      },\n      noData: {\n        text: \"Loading...\"\n      }\n    },\n    seriesPH: [{\n      name: \"PH\",\n      data: []\n    }],\n    optionsPH: {\n      chart: {\n        id: \"ig\",\n        group: \"social\",\n        type: \"area\"\n      },\n      colors: [\"#008FFB\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6\n      },\n      noData: {\n        text: \"Loading...\"\n      }\n    },\n    seriesTDS: [{\n      name: \"TDS\",\n      data: []\n    }],\n    optionsTDS: {\n      chart: {\n        id: \"li\",\n        group: \"social\",\n        type: \"area\"\n      },\n      colors: [\"#b37700\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6\n      },\n      noData: {\n        text: \"Loading...\"\n      }\n    }\n  });\n  const [time, setTime] = useState(\"1\"); // const onChange = (event) => setTime(event.value);\n\n  if (time === \"1\") {\n    fetchChartData(48, selectedDevice); //window.dispatchEvent(new Event(\"resize\"));\n    // setChart({\n    //   seriesTemp: [\n    //     {\n    //       name: \"Temperature\",\n    //       data: seriesTemp,\n    //     },\n    //   ],\n    //   optionsTemp: {\n    //     chart: {\n    //       id: \"area\",\n    //       group: \"social\",\n    //       type: \"area\",\n    //     },\n    //     colors: [\"#00E396\"],\n    //     xaxis: {\n    //       type: \"datetime\",\n    //       categories: arrayTime,\n    //     },\n    //   },\n    //   seriesPH: [\n    //     {\n    //       name: \"PH\",\n    //       data: seriesPH,\n    //     },\n    //   ],\n    //   optionsPH: {\n    //     chart: {\n    //       id: \"ig\",\n    //       group: \"social\",\n    //       type: \"area\",\n    //     },\n    //     colors: [\"#008FFB\"],\n    //     xaxis: {\n    //       type: \"datetime\",\n    //       categories: arrayTime,\n    //       tickAmount: 6,\n    //     },\n    //   },\n    //   seriesTDS: [\n    //     {\n    //       name: \"TDS\",\n    //       data: seriesTDS,\n    //     },\n    //   ],\n    //   optionsTDS: {\n    //     chart: {\n    //       id: \"li\",\n    //       group: \"social\",\n    //       type: \"area\",\n    //     },\n    //     colors: [\"#b37700\"],\n    //     xaxis: {\n    //       type: \"datetime\",\n    //       categories: arrayTime,\n    //       tickAmount: 6,\n    //     },\n    //   },\n    // });\n  } else if (time === \"2\") {\n    fetchChartData(336, selectedDevice); //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"3\") {\n    fetchChartData(1440, selectedDevice); // window.dispatchEvent(new Event(\"resize\"));\n  } // const seriesArea = [\n  //   {\n  //     name: \"Temperature\",\n  //     data: seriesTemp,\n  //   },\n  // ];\n  // const optionsArea = {\n  //   chart: {\n  //     id: \"area\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#00E396\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //   },\n  // };\n  // const seriesSmall = [\n  //   {\n  //     name: \"PH\",\n  //     data: seriesPH,\n  //   },\n  // ];\n  // const optionsSmall = {\n  //   chart: {\n  //     id: \"ig\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#008FFB\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n  // const seriesSmall2 = [\n  //   {\n  //     name: \"TDS\",\n  //     data: seriesTDS,\n  //   },\n  // ];\n  // const optionsSmall2 = {\n  //   chart: {\n  //     id: \"li\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#b37700\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n\n\n  const options = [{\n    value: \"1\",\n    label: \"1 day\"\n  }, {\n    value: \"2\",\n    label: \"1 week\"\n  }, {\n    value: \"3\",\n    label: \"1 month\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          options: optionsDevice,\n          className: \"selecttime\",\n          placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectDevice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 26\n          }, this),\n          onChange: OnChangeDevice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: options,\n          className: \"selecttime\",\n          placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"1 day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 26\n          }, this) // onChange={onChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-time-series\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart-small\",\n          className: \"timeseries\",\n          children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: chart.optionsTemp,\n            series: chart.seriesTemp,\n            type: \"area\",\n            height: 170,\n            width: 1040\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"PH Time Series Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart-small2\",\n          className: \"timeseries\",\n          children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: chart.optionsTDS,\n            series: chart.seriesTDS,\n            type: \"area\",\n            height: 170,\n            width: 1040\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"TDS Time Series Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"chart-area\",\n            className: \"timeseries\",\n            children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n              options: chart.optionsTemp,\n              series: chart.seriesTemp,\n              type: \"area\",\n              height: 170,\n              width: 1040\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Temperature Time Series Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Statistics, \"RADAYMFi1ZbX9r4nBLmSHhU1tsQ=\");\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js"],"names":["React","axios","ReactApexChart","ApexCharts","Select","url","useState","useContext","useEffect","DeviceContext","Statistics","arrayTime","seriesTemp","seriesTDS","seriesPH","deviceState","deviceData","getDevice","fetchChartData","time","select","get","then","response","data","push","getalldata","window","dispatchEvent","Event","catch","console","log","optionsDevice","i","length","value","device","label","selectDevice","setselectDevice","OnChangeDevice","event","selectedDevice","chart","setChart","name","optionsTemp","id","group","type","colors","xaxis","categories","noData","text","optionsPH","tickAmount","optionsTDS","setTime","options"],"mappings":"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A;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA/DD,MA+DO,IAAIxB,IAAI,KAAK,GAAb,EAAkB;AACvBD,IAAAA,cAAc,CAAC,GAAD,EAAMyB,cAAN,CAAd,CADuB,CAEvB;AACD,GAHM,MAGA,IAAIxB,IAAI,KAAK,GAAb,EAAkB;AACvBD,IAAAA,cAAc,CAAC,IAAD,EAAOyB,cAAP,CAAd,CADuB,CAEvB;AACD,GAjMsB,CAmMvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMiB,OAAO,GAAG,CACd;AAAExB,IAAAA,KAAK,EAAE,GAAT;AAAcE,IAAAA,KAAK,EAAE;AAArB,GADc,EAEd;AAAEF,IAAAA,KAAK,EAAE,GAAT;AAAcE,IAAAA,KAAK,EAAE;AAArB,GAFc,EAGd;AAAEF,IAAAA,KAAK,EAAE,GAAT;AAAcE,IAAAA,KAAK,EAAE;AAArB,GAHc,CAAhB;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,SAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEL,aADX;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,WAAW,eAAE;AAAA,sBAAMM;AAAN;AAAA;AAAA;AAAA;AAAA,kBAHf;AAIE,UAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEmB,OADX;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHf,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,EAAE,EAAC,aAAR;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA,kCACE,QAAC,cAAD;AACE,YAAA,OAAO,EAAEhB,KAAK,CAACG,WADjB;AAEE,YAAA,MAAM,EAAEH,KAAK,CAAChC,UAFhB;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,MAAM,EAAE,GAJV;AAKE,YAAA,KAAK,EAAE;AALT;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,SAAS,EAAC,YAAjC;AAAA,kCACE,QAAC,cAAD;AACE,YAAA,OAAO,EAAEgC,KAAK,CAACc,UADjB;AAEE,YAAA,MAAM,EAAEd,KAAK,CAAC/B,SAFhB;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,MAAM,EAAE,GAJV;AAKE,YAAA,KAAK,EAAE;AALT;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAsBE;AAAA,iCACE;AAAK,YAAA,EAAE,EAAC,YAAR;AAAqB,YAAA,SAAS,EAAC,YAA/B;AAAA,oCACE,QAAC,cAAD;AACE,cAAA,OAAO,EAAE+B,KAAK,CAACG,WADjB;AAEE,cAAA,MAAM,EAAEH,KAAK,CAAChC,UAFhB;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,MAAM,EAAE,GAJV;AAKE,cAAA,KAAK,EAAE;AALT;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqDE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YArDF;AAAA,kBADF;AAyDD,CA5TD;;GAAMF,U;;KAAAA,U;AA8TN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\n\nconst Statistics = () => {\n  const arrayTime = [];\n  let seriesTemp = [];\n  let seriesTDS = [];\n  let seriesPH = [];\n\n  const {\n    deviceState: { deviceData },\n    getDevice,\n  } = useContext(DeviceContext);\n  // //get last data\n  useEffect(() => getDevice(), []);\n\n  function fetchChartData(time, select) {\n    axios\n      .get(`${url}/data/chart/${select}/${time}`)\n      .then((response) => {\n        const data = response.data;\n\n        arrayTime.push(...data.getalldata[3]);\n        seriesTemp.push(...data.getalldata[0]);\n        seriesTDS.push(...data.getalldata[1]);\n        seriesPH.push(...data.getalldata[2]);\n\n        window.dispatchEvent(new Event(\"resize\"));\n      })\n      .catch(() => {\n        console.log(\"Error retrieving data!!!\");\n      });\n  }\n\n  var optionsDevice = [];\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = { value: deviceData[i].device, label: `Device ${i + 1}` };\n    optionsDevice.push(value);\n  }\n  console.log(optionsDevice);\n  const [selectDevice, setselectDevice] = useState(\"Device 1\");\n\n  const OnChangeDevice = (event) => {\n    setselectDevice(event.label);\n  };\n  console.log(selectDevice);\n  var selectedDevice;\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n    }\n  }\n\n  const [chart, setChart] = useState({\n    seriesTemp: [\n      {\n        name: \"Temperature\",\n        data: [],\n      },\n    ],\n    optionsTemp: {\n      chart: {\n        id: \"area\",\n        group: \"social\",\n        type: \"area\",\n      },\n      colors: [\"#00E396\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n      },\n      noData: {\n        text: \"Loading...\",\n      },\n    },\n\n    seriesPH: [\n      {\n        name: \"PH\",\n        data: [],\n      },\n    ],\n    optionsPH: {\n      chart: {\n        id: \"ig\",\n        group: \"social\",\n        type: \"area\",\n      },\n      colors: [\"#008FFB\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6,\n      },\n      noData: {\n        text: \"Loading...\",\n      },\n    },\n\n    seriesTDS: [\n      {\n        name: \"TDS\",\n        data: [],\n      },\n    ],\n    optionsTDS: {\n      chart: {\n        id: \"li\",\n        group: \"social\",\n        type: \"area\",\n      },\n      colors: [\"#b37700\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6,\n      },\n      noData: {\n        text: \"Loading...\",\n      },\n    },\n  });\n\n  const [time, setTime] = useState(\"1\");\n  // const onChange = (event) => setTime(event.value);\n  if (time === \"1\") {\n    fetchChartData(48, selectedDevice);\n    //window.dispatchEvent(new Event(\"resize\"));\n    // setChart({\n    //   seriesTemp: [\n    //     {\n    //       name: \"Temperature\",\n    //       data: seriesTemp,\n    //     },\n    //   ],\n    //   optionsTemp: {\n    //     chart: {\n    //       id: \"area\",\n    //       group: \"social\",\n    //       type: \"area\",\n    //     },\n    //     colors: [\"#00E396\"],\n    //     xaxis: {\n    //       type: \"datetime\",\n    //       categories: arrayTime,\n    //     },\n    //   },\n\n    //   seriesPH: [\n    //     {\n    //       name: \"PH\",\n    //       data: seriesPH,\n    //     },\n    //   ],\n    //   optionsPH: {\n    //     chart: {\n    //       id: \"ig\",\n    //       group: \"social\",\n    //       type: \"area\",\n    //     },\n    //     colors: [\"#008FFB\"],\n    //     xaxis: {\n    //       type: \"datetime\",\n    //       categories: arrayTime,\n    //       tickAmount: 6,\n    //     },\n    //   },\n\n    //   seriesTDS: [\n    //     {\n    //       name: \"TDS\",\n    //       data: seriesTDS,\n    //     },\n    //   ],\n    //   optionsTDS: {\n    //     chart: {\n    //       id: \"li\",\n    //       group: \"social\",\n    //       type: \"area\",\n    //     },\n    //     colors: [\"#b37700\"],\n    //     xaxis: {\n    //       type: \"datetime\",\n    //       categories: arrayTime,\n    //       tickAmount: 6,\n    //     },\n    //   },\n    // });\n  } else if (time === \"2\") {\n    fetchChartData(336, selectedDevice);\n    //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"3\") {\n    fetchChartData(1440, selectedDevice);\n    // window.dispatchEvent(new Event(\"resize\"));\n  }\n\n  // const seriesArea = [\n  //   {\n  //     name: \"Temperature\",\n  //     data: seriesTemp,\n  //   },\n  // ];\n  // const optionsArea = {\n  //   chart: {\n  //     id: \"area\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#00E396\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //   },\n  // };\n\n  // const seriesSmall = [\n  //   {\n  //     name: \"PH\",\n  //     data: seriesPH,\n  //   },\n  // ];\n  // const optionsSmall = {\n  //   chart: {\n  //     id: \"ig\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#008FFB\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n\n  // const seriesSmall2 = [\n  //   {\n  //     name: \"TDS\",\n  //     data: seriesTDS,\n  //   },\n  // ];\n  // const optionsSmall2 = {\n  //   chart: {\n  //     id: \"li\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#b37700\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n  const options = [\n    { value: \"1\", label: \"1 day\" },\n    { value: \"2\", label: \"1 week\" },\n    { value: \"3\", label: \"1 month\" },\n  ];\n\n  return (\n    <>\n      <div id=\"wrapper\" className=\"wrapper\">\n        <div className=\"select\">\n          <Select\n            options={optionsDevice}\n            className=\"selecttime\"\n            placeholder={<div>{selectDevice}</div>}\n            onChange={OnChangeDevice}\n          />\n          <Select\n            options={options}\n            className=\"selecttime\"\n            placeholder={<div>1 day</div>}\n            // onChange={onChange}\n          />\n        </div>\n\n        <div className=\"chart-time-series\">\n          <div id=\"chart-small\" className=\"timeseries\">\n            <ReactApexChart\n              options={chart.optionsTemp}\n              series={chart.seriesTemp}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>PH Time Series Chart</h3>\n          </div>\n          <div id=\"chart-small2\" className=\"timeseries\">\n            <ReactApexChart\n              options={chart.optionsTDS}\n              series={chart.seriesTDS}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>TDS Time Series Chart</h3>\n          </div>\n\n          <div>\n            <div id=\"chart-area\" className=\"timeseries\">\n              <ReactApexChart\n                options={chart.optionsTemp}\n                series={chart.seriesTemp}\n                type=\"area\"\n                height={170}\n                width={1040}\n              />\n              <h3>Temperature Time Series Chart</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"wrapper\"></div>\n    </>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}