{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/LVTN/client/src/contexts/DataContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useState } from \"react\";\nimport { dataReducer } from \"../reducers/dataReducer\";\nimport { url, DATA_LOADED_FAIL, DATA_LOADED_SUCCESS, ADD_DEVICE, CONFIG, STATE_LOADED_FAIL, STATE_LOADED_SUCCESS } from \"./constants\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\n\nconst DataContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //state\n  const [dataState, dispatch] = useReducer(dataReducer, {\n    data: [],\n    dataLoading: true\n  });\n  const [showAddTypeModal, setShowAddTypeModal] = useState(false);\n  const [showUpdateTypeModal, setShowUpdateTypeModal] = useState(false);\n  const [showToast, setShowToast] = useState({\n    show: false,\n    message: \"\",\n    type: null\n  }); //get data\n\n  const getData = async () => {\n    try {\n      const responce = await axios.get(`${url}/data`);\n\n      if (responce.data.success) {\n        dispatch({\n          type: DATA_LOADED_SUCCESS,\n          payload: responce.data.getalldata\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: DATA_LOADED_FAIL\n      });\n    }\n  };\n\n  const getChartData = async () => {\n    try {\n      const responce = await axios.get(`${url}/data/chart`);\n\n      if (responce.data.success) {\n        dispatch({\n          type: DATA_LOADED_SUCCESS,\n          payload: responce.data.getalldata\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: DATA_LOADED_FAIL\n      });\n    }\n  };\n\n  const addDevices = async newDevice => {\n    try {\n      const response = await axios.post(`${url}/device`, newDevice);\n\n      if (response.data.success) {\n        dispatch({\n          type: ADD_DEVICE,\n          payload: response.data.post\n        });\n        return response.data;\n      }\n    } catch (error) {\n      return error.response.data ? error.response.data : {\n        success: false,\n        message: \"Server error\"\n      };\n    }\n  };\n\n  const dataContextData = {\n    dataState,\n    addDevices,\n    getData,\n    getChartData,\n    config,\n    getConfigData\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: dataContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataContextProvider, \"TkybVDfTsp9fhIc23M0Z4WVEVj4=\");\n\n_c = DataContextProvider;\nexport default DataContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataContextProvider\");","map":{"version":3,"sources":["/home/tran/Downloads/LVTN/client/src/contexts/DataContext.js"],"names":["createContext","useReducer","useState","dataReducer","url","DATA_LOADED_FAIL","DATA_LOADED_SUCCESS","ADD_DEVICE","CONFIG","STATE_LOADED_FAIL","STATE_LOADED_SUCCESS","axios","DataContext","DataContextProvider","children","dataState","dispatch","data","dataLoading","showAddTypeModal","setShowAddTypeModal","showUpdateTypeModal","setShowUpdateTypeModal","showToast","setShowToast","show","message","type","getData","responce","get","success","payload","getalldata","error","getChartData","addDevices","newDevice","response","post","dataContextData","config","getConfigData"],"mappings":"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","sourcesContent":["import { createContext, useReducer, useState } from \"react\";\nimport { dataReducer } from \"../reducers/dataReducer\";\nimport {\n  url,\n  DATA_LOADED_FAIL,\n  DATA_LOADED_SUCCESS,\n  ADD_DEVICE,\n  CONFIG,\n  STATE_LOADED_FAIL,\n  STATE_LOADED_SUCCESS,\n} from \"./constants\";\nimport axios from \"axios\";\n\nexport const DataContext = createContext();\n\nconst DataContextProvider = ({ children }) => {\n  //state\n  const [dataState, dispatch] = useReducer(dataReducer, {\n    data: [],\n    dataLoading: true,\n  });\n\n  const [showAddTypeModal, setShowAddTypeModal] = useState(false);\n  const [showUpdateTypeModal, setShowUpdateTypeModal] = useState(false);\n  const [showToast, setShowToast] = useState({\n    show: false,\n    message: \"\",\n    type: null,\n  });\n  //get data\n  const getData = async () => {\n    try {\n      const responce = await axios.get(`${url}/data`);\n      if (responce.data.success) {\n        dispatch({\n          type: DATA_LOADED_SUCCESS,\n          payload: responce.data.getalldata,\n        });\n      }\n    } catch (error) {\n      dispatch({ type: DATA_LOADED_FAIL });\n    }\n  };\n\n  const getChartData = async () => {\n    try {\n      const responce = await axios.get(`${url}/data/chart`);\n      if (responce.data.success) {\n        dispatch({\n          type: DATA_LOADED_SUCCESS,\n          payload: responce.data.getalldata,\n        });\n      }\n    } catch (error) {\n      dispatch({ type: DATA_LOADED_FAIL });\n    }\n  };\n\n  const addDevices = async (newDevice) => {\n    try {\n      const response = await axios.post(`${url}/device`, newDevice);\n      if (response.data.success) {\n        dispatch({\n          type: ADD_DEVICE,\n          payload: response.data.post,\n        });\n        return response.data;\n      }\n    } catch (error) {\n      return error.response.data\n        ? error.response.data\n        : { success: false, message: \"Server error\" };\n    }\n  };\n\n  const dataContextData = {\n    dataState,\n    addDevices,\n    getData,\n    getChartData,\n    config,\n    getConfigData,\n  };\n  return (\n    <DataContext.Provider value={dataContextData}>\n      {children}\n    </DataContext.Provider>\n  );\n};\nexport default DataContextProvider;\n"]},"metadata":{},"sourceType":"module"}