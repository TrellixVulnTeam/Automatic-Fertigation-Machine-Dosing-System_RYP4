{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = () => {\n  _s();\n\n  const arrayTime = [];\n  let seriesTemp = [];\n  let seriesTDS = [];\n  let seriesPH = [];\n  const {\n    deviceState: {\n      deviceData\n    },\n    getDevice\n  } = useContext(DeviceContext); // //get last data\n\n  const [chartData, setChartData] = useState({\n    seriesTemperature: [{\n      name: \"Temperature\",\n      data: []\n    }],\n    optionsTemperature: {\n      chart: {\n        id: \"area\",\n        group: \"social\",\n        type: \"area\"\n      },\n      colors: [\"#00E396\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: []\n      },\n      noData: {\n        text: \"Loading...\"\n      }\n    },\n    seriesPHChart: [{\n      name: \"PH\",\n      data: []\n    }],\n    optionsPhChart: {\n      chart: {\n        id: \"ig\",\n        group: \"social\",\n        type: \"area\"\n      },\n      colors: [\"#008FFB\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6\n      },\n      noData: {\n        text: \"Loading...\"\n      }\n    },\n    seriesTDSChart: [{\n      name: \"TDS\",\n      data: []\n    }],\n    optionsTDSChart: {\n      chart: {\n        id: \"li\",\n        group: \"social\",\n        type: \"area\"\n      },\n      colors: [\"#b37700\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6\n      },\n      noData: {\n        text: \"Loading...\"\n      }\n    }\n  });\n  useEffect(() => {\n    getDevice();\n  }, []);\n  const [selectDevice, setselectDevice] = useState(\"Device 2\");\n\n  const OnChangeDevice = event => {\n    setselectDevice(event.label);\n  };\n\n  console.log(optionsDevice);\n  var optionsDevice = [];\n\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = {\n      value: deviceData[i].device,\n      label: `Device ${i + 1}`\n    };\n    optionsDevice.push(value);\n  }\n\n  var selectedDevice = null;\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n    }\n  }\n\n  const [time, setTime] = useState(\"1\"); // if (time === \"1\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(\"58bf251706a0\", 48);\n  // } else if (time === \"2\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(selectedDevice, 336);\n  // } else if (time === \"3\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(selectedDevice, 1440);\n  // }\n\n  function fetchChartData(device, length) {\n    axios.get(`${url}/data/chart/${device}/${length}`).then(response => {\n      const data = response.data;\n      seriesTemp.push(...data.getalldata[0]);\n      seriesTDS.push(...data.getalldata[1]);\n      seriesPH.push(...data.getalldata[2]);\n      arrayTime.push(...data.getalldata[3]);\n      window.dispatchEvent(new Event(\"resize\"));\n    }).catch(() => {\n      console.log(\"Error retrieving data!!!\");\n    });\n  }\n\n  useEffect(() => {\n    if (time === \"1\") {\n      console.log(selectedDevice);\n      fetchChartData(selectDevice, 48);\n    } else if (time === \"2\") {\n      console.log(selectedDevice);\n      fetchChartData(selectedDevice, 336);\n    } else if (time === \"3\") {\n      console.log(selectedDevice);\n      fetchChartData(selectedDevice, 1440);\n    }\n  }, [selectDevice, time]);\n  const seriesTemperature = [{\n    name: \"Temperature\",\n    data: seriesTemp\n  }];\n  const optionsTemperature = {\n    chart: {\n      id: \"area\",\n      group: \"social\",\n      type: \"area\"\n    },\n    colors: [\"#00E396\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0]\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true\n    },\n    toolbar: {\n      autoSelected: \"zoom\"\n    }\n  };\n  const seriesPHChart = [{\n    name: \"PH\",\n    data: seriesPH\n  }];\n  const optionsPhChart = {\n    chart: {\n      id: \"ig\",\n      group: \"social\",\n      type: \"area\"\n    },\n    colors: [\"#008FFB\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n      tickAmount: 6\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true\n    },\n    toolbar: {\n      autoSelected: \"zoom\"\n    }\n  };\n  const seriesTDSChart = [{\n    name: \"TDS\",\n    data: seriesTDS\n  }];\n  const optionsTDSChart = {\n    chart: {\n      id: \"li\",\n      group: \"social\",\n      type: \"area\"\n    },\n    colors: [\"#b37700\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n      tickAmount: 6\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true\n    },\n    toolbar: {\n      autoSelected: \"zoom\"\n    }\n  };\n  const options = [{\n    value: \"1\",\n    label: \"1 day\"\n  }, {\n    value: \"2\",\n    label: \"1 week\"\n  }, {\n    value: \"3\",\n    label: \"1 month\"\n  }];\n\n  const onChange = event => setTime(event.value);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        options: optionsDevice,\n        className: \"selecttime\",\n        placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectDevice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 24\n        }, this),\n        onChange: OnChangeDevice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: options,\n        className: \"selecttime\",\n        placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"1 day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 24\n        }, this),\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-time-series\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart-small\",\n          className: \"timeseries\",\n          children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: chartData.optionsPhChart,\n            series: chartData.seriesPHChart,\n            type: \"area\",\n            height: 170,\n            width: 1040\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"PH Time Series Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart-small2\",\n          className: \"timeseries\",\n          children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: chartData.optionsTDSChart,\n            series: chartData.seriesTDSChart,\n            type: \"area\",\n            height: 170,\n            width: 1040\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"TDS Time Series Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"chart-area\",\n            className: \"timeseries\",\n            children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n              options: chartData.optionsTemperature,\n              series: chartData.seriesTemperature,\n              type: \"area\",\n              height: 170,\n              width: 1040\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Temperature Time Series Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Statistics, \"htEL8c9gkLw973hE1xsD/pLOuV0=\");\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js"],"names":["React","axios","ReactApexChart","Select","url","useState","useEffect","useContext","DeviceContext","Statistics","arrayTime","seriesTemp","seriesTDS","seriesPH","deviceState","deviceData","getDevice","chartData","setChartData","seriesTemperature","name","data","optionsTemperature","chart","id","group","type","colors","xaxis","categories","noData","text","seriesPHChart","optionsPhChart","tickAmount","seriesTDSChart","optionsTDSChart","selectDevice","setselectDevice","OnChangeDevice","event","label","console","log","optionsDevice","i","length","value","device","push","selectedDevice","time","setTime","fetchChartData","get","then","response","getalldata","window","dispatchEvent","Event","catch","min","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","options","onChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\n\nconst Statistics = () => {\n  const arrayTime = [];\n  let seriesTemp = [];\n  let seriesTDS = [];\n  let seriesPH = [];\n\n  const {\n    deviceState: { deviceData },\n    getDevice,\n  } = useContext(DeviceContext);\n  // //get last data\n\n  const [chartData, setChartData] = useState({\n    seriesTemperature: [\n      {\n        name: \"Temperature\",\n        data: [],\n      },\n    ],\n    optionsTemperature: {\n      chart: {\n        id: \"area\",\n        group: \"social\",\n        type: \"area\",\n      },\n      colors: [\"#00E396\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n      },\n      noData: {\n        text: \"Loading...\",\n      },\n    },\n    seriesPHChart: [\n      {\n        name: \"PH\",\n        data: [],\n      },\n    ],\n    optionsPhChart: {\n      chart: {\n        id: \"ig\",\n\n        group: \"social\",\n        type: \"area\",\n      },\n      colors: [\"#008FFB\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6,\n      },\n      noData: {\n        text: \"Loading...\",\n      },\n    },\n\n    seriesTDSChart: [\n      {\n        name: \"TDS\",\n        data: [],\n      },\n    ],\n    optionsTDSChart: {\n      chart: {\n        id: \"li\",\n        group: \"social\",\n        type: \"area\",\n      },\n      colors: [\"#b37700\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6,\n      },\n      noData: {\n        text: \"Loading...\",\n      },\n    },\n  });\n\n  useEffect(() => {\n    getDevice();\n  }, []);\n\n  const [selectDevice, setselectDevice] = useState(\"Device 2\");\n  const OnChangeDevice = (event) => {\n    setselectDevice(event.label);\n  };\n\n  console.log(optionsDevice);\n\n  var optionsDevice = [];\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = { value: deviceData[i].device, label: `Device ${i + 1}` };\n    optionsDevice.push(value);\n  }\n  var selectedDevice = null;\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n    }\n  }\n\n  const [time, setTime] = useState(\"1\");\n  // if (time === \"1\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(\"58bf251706a0\", 48);\n  // } else if (time === \"2\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(selectedDevice, 336);\n  // } else if (time === \"3\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(selectedDevice, 1440);\n  // }\n  function fetchChartData(device, length) {\n    axios\n      .get(`${url}/data/chart/${device}/${length}`)\n      .then((response) => {\n        const data = response.data;\n\n        seriesTemp.push(...data.getalldata[0]);\n        seriesTDS.push(...data.getalldata[1]);\n        seriesPH.push(...data.getalldata[2]);\n        arrayTime.push(...data.getalldata[3]);\n\n        window.dispatchEvent(new Event(\"resize\"));\n      })\n      .catch(() => {\n        console.log(\"Error retrieving data!!!\");\n      });\n  }\n\n  useEffect(() => {\n    if (time === \"1\") {\n      console.log(selectedDevice);\n      fetchChartData(selectDevice, 48);\n    } else if (time === \"2\") {\n      console.log(selectedDevice);\n      fetchChartData(selectedDevice, 336);\n    } else if (time === \"3\") {\n      console.log(selectedDevice);\n      fetchChartData(selectedDevice, 1440);\n    }\n  }, [selectDevice, time]);\n\n  const seriesTemperature = [\n    {\n      name: \"Temperature\",\n      data: seriesTemp,\n    },\n  ];\n  const optionsTemperature = {\n    chart: {\n      id: \"area\",\n      group: \"social\",\n      type: \"area\",\n    },\n    colors: [\"#00E396\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true,\n    },\n    toolbar: {\n      autoSelected: \"zoom\",\n    },\n  };\n\n  const seriesPHChart = [\n    {\n      name: \"PH\",\n      data: seriesPH,\n    },\n  ];\n  const optionsPhChart = {\n    chart: {\n      id: \"ig\",\n      group: \"social\",\n      type: \"area\",\n    },\n    colors: [\"#008FFB\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n      tickAmount: 6,\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true,\n    },\n    toolbar: {\n      autoSelected: \"zoom\",\n    },\n  };\n\n  const seriesTDSChart = [\n    {\n      name: \"TDS\",\n      data: seriesTDS,\n    },\n  ];\n  const optionsTDSChart = {\n    chart: {\n      id: \"li\",\n      group: \"social\",\n      type: \"area\",\n    },\n    colors: [\"#b37700\"],\n    xaxis: {\n      type: \"datetime\",\n      min: arrayTime[0],\n      tickAmount: 6,\n    },\n    zoom: {\n      type: \"x\",\n      enabled: true,\n      autoScaleYaxis: true,\n    },\n    toolbar: {\n      autoSelected: \"zoom\",\n    },\n  };\n  const options = [\n    { value: \"1\", label: \"1 day\" },\n    { value: \"2\", label: \"1 week\" },\n    { value: \"3\", label: \"1 month\" },\n  ];\n\n  const onChange = (event) => setTime(event.value);\n\n  return (\n    <>\n      <div id=\"wrapper\" className=\"wrapper\">\n        <Select\n          options={optionsDevice}\n          className=\"selecttime\"\n          placeholder={<div>{selectDevice}</div>}\n          onChange={OnChangeDevice}\n        />\n        <Select\n          options={options}\n          className=\"selecttime\"\n          placeholder={<div>1 day</div>}\n          onChange={onChange}\n        />\n        <div className=\"chart-time-series\">\n          <div id=\"chart-small\" className=\"timeseries\">\n            <ReactApexChart\n              options={chartData.optionsPhChart}\n              series={chartData.seriesPHChart}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>PH Time Series Chart</h3>\n          </div>\n          <div id=\"chart-small2\" className=\"timeseries\">\n            <ReactApexChart\n              options={chartData.optionsTDSChart}\n              series={chartData.seriesTDSChart}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>TDS Time Series Chart</h3>\n          </div>\n\n          <div>\n            <div id=\"chart-area\" className=\"timeseries\">\n              <ReactApexChart\n                options={chartData.optionsTemperature}\n                series={chartData.seriesTemperature}\n                type=\"area\"\n                height={170}\n                width={1040}\n              />\n              <h3>Temperature Time Series Chart</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"wrapper\"></div>\n    </>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}