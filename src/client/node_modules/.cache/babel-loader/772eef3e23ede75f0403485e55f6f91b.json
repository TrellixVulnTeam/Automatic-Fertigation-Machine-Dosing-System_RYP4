{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = () => {\n  _s();\n\n  // const arrayTemp = [];\n  // const arrayTDS = [];\n  // const arrayPH = [];\n  // const arrayTime = [];\n  // let seriesTemp = [];\n  // let seriesTDS = [];\n  // let seriesPH = [];\n  // let dataseries = [];\n  const [seriesTemp, setSeriesTemp] = useState([]);\n  const [seriesTDS, setSeriesTDS] = useState([]);\n  const [seriesPH, setSeriesPH] = useState([]);\n  const [arrayTime, setArrayTime] = useState([]);\n  const {\n    deviceState: {\n      deviceData\n    },\n    getDevice\n  } = useContext(DeviceContext); // //get last data\n\n  useEffect(() => getDevice(), []);\n\n  function fetchChartData(time, select) {\n    axios.get(`${url}/data/chart/${select}/${time}`).then(response => {\n      const data = response.data;\n      setSeriesTDS(data.getalldata[1]);\n      setSeriesPH(data.getalldata[2]);\n      setSeriesTemp(data.getalldata[0]);\n      setArrayTime(data.getalldata[3]); // arrayTime.push(...data.getalldata[3]);\n      // seriesTemp.push(...data.getalldata[0]);\n      // seriesTDS.push(...data.getalldata[1]);\n      // seriesPH.push(...data.getalldata[2]);\n      // window.dispatchEvent(new Event(\"resize\"));\n\n      setSeriesTemp({\n        seriesArea: [{\n          name: \"Temperature\",\n          data: data.getalldata[0]\n        }],\n        optionsArea: {\n          chart: {\n            id: \"area\",\n            group: \"social\",\n            type: \"area\"\n          },\n          colors: [\"#00E396\"],\n          xaxis: {\n            type: \"datetime\",\n            categories: data.getalldata[3]\n          }\n        }\n      });\n      setSeriesPH({\n        seriesSmall: [{\n          name: \"PH\",\n          data: data.getalldata[2]\n        }],\n        optionsSmall: {\n          chart: {\n            id: \"ig\",\n            group: \"social\",\n            type: \"area\"\n          },\n          colors: [\"#008FFB\"],\n          xaxis: {\n            type: \"datetime\",\n            categories: data.getalldata[3],\n            tickAmount: 6\n          }\n        }\n      });\n      setSeriesTDS({\n        seriesSmall2: [{\n          name: \"TDS\",\n          data: data.getalldata[1]\n        }],\n        optionsSmall2: {\n          chart: {\n            id: \"li\",\n            group: \"social\",\n            type: \"area\"\n          },\n          colors: [\"#b37700\"],\n          xaxis: {\n            type: \"datetime\",\n            categories: data.getalldata[3],\n            tickAmount: 6\n          }\n        }\n      });\n    }).catch(() => {\n      console.log(\"Error retrieving data!!!\");\n    });\n  }\n\n  console.log(seriesTemp);\n  console.log(seriesPH);\n  console.log(seriesTDS);\n  console.log(arrayTime);\n  var optionsDevice = [];\n\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = {\n      value: deviceData[i].device,\n      label: `Device ${i + 1}`\n    };\n    optionsDevice.push(value);\n  }\n\n  console.log(optionsDevice);\n  const [selectDevice, setselectDevice] = useState(\"Device 1\");\n\n  const OnChangeDevice = event => {\n    setselectDevice(event.label);\n  };\n\n  console.log(selectDevice);\n  var selectedDevice;\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n    }\n  }\n\n  const [time, setTime] = useState(\"1\");\n\n  const onChange = event => setTime(event.value);\n\n  if (time === \"1\") {\n    fetchChartData(48, selectedDevice); //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"2\") {\n    fetchChartData(336, selectedDevice); //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"3\") {\n    fetchChartData(1440, selectedDevice); // window.dispatchEvent(new Event(\"resize\"));\n  } // const seriesArea = [\n  //   {\n  //     name: \"Temperature\",\n  //     data: seriesTemp,\n  //   },\n  // ];\n  // const optionsArea = {\n  //   chart: {\n  //     id: \"area\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#00E396\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //   },\n  // };\n  // const seriesSmall = [\n  //   {\n  //     name: \"PH\",\n  //     data: seriesPH,\n  //   },\n  // ];\n  // const optionsSmall = {\n  //   chart: {\n  //     id: \"ig\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#008FFB\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n  // const seriesSmall2 = [\n  //   {\n  //     name: \"TDS\",\n  //     data: seriesTDS,\n  //   },\n  // ];\n  // const optionsSmall2 = {\n  //   chart: {\n  //     id: \"li\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#b37700\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n\n\n  const options = [{\n    value: \"1\",\n    label: \"1 day\"\n  }, {\n    value: \"2\",\n    label: \"1 week\"\n  }, {\n    value: \"3\",\n    label: \"1 month\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          options: optionsDevice,\n          className: \"selecttime\",\n          placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectDevice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 26\n          }, this),\n          onChange: OnChangeDevice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: options,\n          className: \"selecttime\",\n          placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"1 day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 26\n          }, this),\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-time-series\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart-small\",\n          className: \"timeseries\",\n          children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: seriesPH.optionsSmall,\n            series: seriesPH.seriesSmall,\n            type: \"area\",\n            height: 170,\n            width: 1040\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"PH Time Series Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart-small2\",\n          className: \"timeseries\",\n          children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: seriesTDS.optionsSmall2,\n            series: seriesTDS.seriesSmall2,\n            type: \"area\",\n            height: 170,\n            width: 1040\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"TDS Time Series Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"chart-area\",\n            className: \"timeseries\",\n            children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n              options: seriesTemp.optionsArea,\n              series: seriesTemp.seriesArea,\n              type: \"area\",\n              height: 170,\n              width: 1040\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Temperature Time Series Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Statistics, \"RpQAKUw2dTLfV39EuPHIFSaA4mg=\");\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js"],"names":["React","axios","ReactApexChart","Select","url","useState","useContext","useEffect","DeviceContext","Statistics","seriesTemp","setSeriesTemp","seriesTDS","setSeriesTDS","seriesPH","setSeriesPH","arrayTime","setArrayTime","deviceState","deviceData","getDevice","fetchChartData","time","select","get","then","response","data","getalldata","seriesArea","name","optionsArea","chart","id","group","type","colors","xaxis","categories","seriesSmall","optionsSmall","tickAmount","seriesSmall2","optionsSmall2","catch","console","log","optionsDevice","i","length","value","device","label","push","selectDevice","setselectDevice","OnChangeDevice","event","selectedDevice","setTime","onChange","options"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\n\nconst Statistics = () => {\n  // const arrayTemp = [];\n  // const arrayTDS = [];\n  // const arrayPH = [];\n  // const arrayTime = [];\n  // let seriesTemp = [];\n  // let seriesTDS = [];\n  // let seriesPH = [];\n  // let dataseries = [];\n  const [seriesTemp, setSeriesTemp] = useState([]);\n  const [seriesTDS, setSeriesTDS] = useState([]);\n  const [seriesPH, setSeriesPH] = useState([]);\n  const [arrayTime, setArrayTime] = useState([]);\n\n  const {\n    deviceState: { deviceData },\n    getDevice,\n  } = useContext(DeviceContext);\n  // //get last data\n  useEffect(() => getDevice(), []);\n\n  function fetchChartData(time, select) {\n    axios\n      .get(`${url}/data/chart/${select}/${time}`)\n      .then((response) => {\n        const data = response.data;\n        setSeriesTDS(data.getalldata[1]);\n        setSeriesPH(data.getalldata[2]);\n        setSeriesTemp(data.getalldata[0]);\n        setArrayTime(data.getalldata[3]);\n        // arrayTime.push(...data.getalldata[3]);\n        // seriesTemp.push(...data.getalldata[0]);\n        // seriesTDS.push(...data.getalldata[1]);\n        // seriesPH.push(...data.getalldata[2]);\n        // window.dispatchEvent(new Event(\"resize\"));\n        setSeriesTemp({\n          seriesArea: [\n            {\n              name: \"Temperature\",\n              data: data.getalldata[0],\n            },\n          ],\n          optionsArea: {\n            chart: {\n              id: \"area\",\n              group: \"social\",\n              type: \"area\",\n            },\n            colors: [\"#00E396\"],\n            xaxis: {\n              type: \"datetime\",\n              categories: data.getalldata[3],\n            },\n          },\n        });\n        setSeriesPH({\n          seriesSmall: [\n            {\n              name: \"PH\",\n              data: data.getalldata[2],\n            },\n          ],\n          optionsSmall: {\n            chart: {\n              id: \"ig\",\n              group: \"social\",\n              type: \"area\",\n            },\n            colors: [\"#008FFB\"],\n            xaxis: {\n              type: \"datetime\",\n              categories: data.getalldata[3],\n              tickAmount: 6,\n            },\n          },\n        });\n        setSeriesTDS({\n          seriesSmall2: [\n            {\n              name: \"TDS\",\n              data: data.getalldata[1],\n            },\n          ],\n          optionsSmall2: {\n            chart: {\n              id: \"li\",\n              group: \"social\",\n              type: \"area\",\n            },\n            colors: [\"#b37700\"],\n            xaxis: {\n              type: \"datetime\",\n              categories: data.getalldata[3],\n              tickAmount: 6,\n            },\n          },\n        });\n      })\n      .catch(() => {\n        console.log(\"Error retrieving data!!!\");\n      });\n  }\n\n  console.log(seriesTemp);\n  console.log(seriesPH);\n  console.log(seriesTDS);\n  console.log(arrayTime);\n  var optionsDevice = [];\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = { value: deviceData[i].device, label: `Device ${i + 1}` };\n    optionsDevice.push(value);\n  }\n  console.log(optionsDevice);\n  const [selectDevice, setselectDevice] = useState(\"Device 1\");\n\n  const OnChangeDevice = (event) => {\n    setselectDevice(event.label);\n  };\n  console.log(selectDevice);\n  var selectedDevice;\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectDevice === optionsDevice[i].label) {\n      selectedDevice = deviceData[i].device;\n    }\n  }\n\n  const [time, setTime] = useState(\"1\");\n  const onChange = (event) => setTime(event.value);\n  if (time === \"1\") {\n    fetchChartData(48, selectedDevice);\n    //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"2\") {\n    fetchChartData(336, selectedDevice);\n    //window.dispatchEvent(new Event(\"resize\"));\n  } else if (time === \"3\") {\n    fetchChartData(1440, selectedDevice);\n    // window.dispatchEvent(new Event(\"resize\"));\n  }\n\n  // const seriesArea = [\n  //   {\n  //     name: \"Temperature\",\n  //     data: seriesTemp,\n  //   },\n  // ];\n  // const optionsArea = {\n  //   chart: {\n  //     id: \"area\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#00E396\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //   },\n  // };\n\n  // const seriesSmall = [\n  //   {\n  //     name: \"PH\",\n  //     data: seriesPH,\n  //   },\n  // ];\n  // const optionsSmall = {\n  //   chart: {\n  //     id: \"ig\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#008FFB\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n\n  // const seriesSmall2 = [\n  //   {\n  //     name: \"TDS\",\n  //     data: seriesTDS,\n  //   },\n  // ];\n  // const optionsSmall2 = {\n  //   chart: {\n  //     id: \"li\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#b37700\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n  const options = [\n    { value: \"1\", label: \"1 day\" },\n    { value: \"2\", label: \"1 week\" },\n    { value: \"3\", label: \"1 month\" },\n  ];\n\n  return (\n    <>\n      <div id=\"wrapper\" className=\"wrapper\">\n        <div className=\"select\">\n          <Select\n            options={optionsDevice}\n            className=\"selecttime\"\n            placeholder={<div>{selectDevice}</div>}\n            onChange={OnChangeDevice}\n          />\n          <Select\n            options={options}\n            className=\"selecttime\"\n            placeholder={<div>1 day</div>}\n            onChange={onChange}\n          />\n        </div>\n\n        <div className=\"chart-time-series\">\n          <div id=\"chart-small\" className=\"timeseries\">\n            <ReactApexChart\n              options={seriesPH.optionsSmall}\n              series={seriesPH.seriesSmall}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>PH Time Series Chart</h3>\n          </div>\n          <div id=\"chart-small2\" className=\"timeseries\">\n            <ReactApexChart\n              options={seriesTDS.optionsSmall2}\n              series={seriesTDS.seriesSmall2}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>TDS Time Series Chart</h3>\n          </div>\n\n          <div>\n            <div id=\"chart-area\" className=\"timeseries\">\n              <ReactApexChart\n                options={seriesTemp.optionsArea}\n                series={seriesTemp.seriesArea}\n                type=\"area\"\n                height={170}\n                width={1040}\n              />\n              <h3>Temperature Time Series Chart</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"wrapper\"></div>\n    </>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}