{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js\";\nimport React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = () => {\n  // const arrayTime = [];\n  // let seriesTempvalue = [];\n  // let seriesTDSvalue = [];\n  // let seriesPHvalue = [];\n  // const {\n  //   deviceState: { deviceData },\n  //   getDevice,\n  // } = useContext(DeviceContext);\n  // // //get last data\n  // useEffect(() => getDevice(), []);\n  // var optionsDevice = [];\n  // for (let i = 0; i < deviceData.length; i++) {\n  //   let value = [];\n  //   value = { value: deviceData[i].device, label: `Device ${i + 1}` };\n  //   optionsDevice.push(value);\n  // }\n  // console.log(optionsDevice);\n  // const [selectDevice, setselectDevice] = useState(\"Device 1\");\n  // const OnChangeDevice = (event) => {\n  //   setselectDevice(event.label);\n  // };\n  // console.log(selectDevice);\n  // var selectedDevice;\n  // for (let i = 0; i < deviceData.length; i++) {\n  //   if (selectDevice === optionsDevice[i].label) {\n  //     selectedDevice = deviceData[i].device;\n  //   }\n  // }\n  // const [time, setTime] = useState(\"1\");\n  // const onChange = () => (event) => {\n  //   setTime(event.value);\n  // };\n  // if (time === \"1\") {\n  //   fetchChartData(48, selectedDevice);\n  //   // window.dispatchEvent(new Event(\"resize\"));\n  // } else if (time === \"2\") {\n  //   fetchChartData(336, selectedDevice);\n  //   // window.dispatchEvent(new Event(\"resize\"));\n  // } else if (time === \"3\") {\n  //   fetchChartData(1440, selectedDevice);\n  //   // window.dispatchEvent(new Event(\"resize\"));\n  // }\n  // function fetchChartData(time, select) {\n  //   axios\n  //     .get(`${url}/data/chart/${select}/${time}`)\n  //     .then((response) => {\n  //       const data = response.data;\n  //       seriesTempvalue.push(...data.getalldata[0]);\n  //       seriesTDSvalue.push(...data.getalldata[1]);\n  //       seriesPHvalue.push(...data.getalldata[2]);\n  //       arrayTime.push(...data.getalldata[3]);\n  //       // window.dispatchEvent(new Event(\"resize\"));\n  //     })\n  //     .catch(() => {\n  //       console.log(\"Error retrieving data!!!\");\n  //     });\n  // }\n  // const seriesTemp = [\n  //   {\n  //     name: \"Temperature\",\n  //     data: seriesTempvalue,\n  //   },\n  // ];\n  // const optionsTemp = {\n  //   chart: {\n  //     id: \"area\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#00E396\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //   },\n  // };\n  // const seriesPH = [\n  //   {\n  //     name: \"PH\",\n  //     data: seriesPHvalue,\n  //   },\n  // ];\n  // const optionsPH = {\n  //   chart: {\n  //     id: \"ig\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#008FFB\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n  // const seriesTDS = [\n  //   {\n  //     name: \"TDS\",\n  //     data: seriesTDSvalue,\n  //   },\n  // ];\n  // const optionsTDS = {\n  //   chart: {\n  //     id: \"li\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#b37700\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n  // const options = [\n  //   { value: \"1\", label: \"1 day\" },\n  //   { value: \"2\", label: \"1 week\" },\n  //   { value: \"3\", label: \"1 month\" },\n  // ];\n  var options = {\n    chart: {\n      type: \"bar\",\n      id: \"li\"\n    },\n    series: [{\n      name: \"sales\",\n      data: [30, 40, 35, 50, 49, 60, 70, 91, 125]\n    }],\n    xaxis: {\n      categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\n    }\n  };\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js"],"names":["React","axios","ReactApexChart","ApexCharts","Select","url","useState","useContext","useEffect","DeviceContext","Statistics","options","chart","type","id","series","name","data","xaxis","categories","document","querySelector","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,GAAT,QAAoB,uBAApB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,aAAT,QAA8B,2BAA9B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACva,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,GAAjC;AAFR,KADM,CALI;AAWZC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD;AADP;AAXK,GAAd;AAgBA,MAAIP,KAAK,GAAG,IAAIT,UAAJ,CAAeiB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf,EAAiDV,OAAjD,CAAZ;AACAC,EAAAA,KAAK,CAACU,MAAN;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4DD,CA9MD;;KAAMZ,U;AAgNN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\n\nconst Statistics = () => {\n  // const arrayTime = [];\n  // let seriesTempvalue = [];\n  // let seriesTDSvalue = [];\n  // let seriesPHvalue = [];\n\n  // const {\n  //   deviceState: { deviceData },\n  //   getDevice,\n  // } = useContext(DeviceContext);\n  // // //get last data\n  // useEffect(() => getDevice(), []);\n\n  // var optionsDevice = [];\n  // for (let i = 0; i < deviceData.length; i++) {\n  //   let value = [];\n  //   value = { value: deviceData[i].device, label: `Device ${i + 1}` };\n  //   optionsDevice.push(value);\n  // }\n  // console.log(optionsDevice);\n  // const [selectDevice, setselectDevice] = useState(\"Device 1\");\n\n  // const OnChangeDevice = (event) => {\n  //   setselectDevice(event.label);\n  // };\n  // console.log(selectDevice);\n  // var selectedDevice;\n\n  // for (let i = 0; i < deviceData.length; i++) {\n  //   if (selectDevice === optionsDevice[i].label) {\n  //     selectedDevice = deviceData[i].device;\n  //   }\n  // }\n\n  // const [time, setTime] = useState(\"1\");\n  // const onChange = () => (event) => {\n  //   setTime(event.value);\n  // };\n\n  // if (time === \"1\") {\n  //   fetchChartData(48, selectedDevice);\n  //   // window.dispatchEvent(new Event(\"resize\"));\n  // } else if (time === \"2\") {\n  //   fetchChartData(336, selectedDevice);\n  //   // window.dispatchEvent(new Event(\"resize\"));\n  // } else if (time === \"3\") {\n  //   fetchChartData(1440, selectedDevice);\n  //   // window.dispatchEvent(new Event(\"resize\"));\n  // }\n\n  // function fetchChartData(time, select) {\n  //   axios\n  //     .get(`${url}/data/chart/${select}/${time}`)\n  //     .then((response) => {\n  //       const data = response.data;\n  //       seriesTempvalue.push(...data.getalldata[0]);\n  //       seriesTDSvalue.push(...data.getalldata[1]);\n  //       seriesPHvalue.push(...data.getalldata[2]);\n  //       arrayTime.push(...data.getalldata[3]);\n  //       // window.dispatchEvent(new Event(\"resize\"));\n  //     })\n  //     .catch(() => {\n  //       console.log(\"Error retrieving data!!!\");\n  //     });\n  // }\n  // const seriesTemp = [\n  //   {\n  //     name: \"Temperature\",\n  //     data: seriesTempvalue,\n  //   },\n  // ];\n  // const optionsTemp = {\n  //   chart: {\n  //     id: \"area\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#00E396\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //   },\n  // };\n\n  // const seriesPH = [\n  //   {\n  //     name: \"PH\",\n  //     data: seriesPHvalue,\n  //   },\n  // ];\n  // const optionsPH = {\n  //   chart: {\n  //     id: \"ig\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#008FFB\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n\n  // const seriesTDS = [\n  //   {\n  //     name: \"TDS\",\n  //     data: seriesTDSvalue,\n  //   },\n  // ];\n  // const optionsTDS = {\n  //   chart: {\n  //     id: \"li\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#b37700\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     categories: arrayTime,\n  //     tickAmount: 6,\n  //   },\n  // };\n  // const options = [\n  //   { value: \"1\", label: \"1 day\" },\n  //   { value: \"2\", label: \"1 week\" },\n  //   { value: \"3\", label: \"1 month\" },\n  // ];\n  var options = {\n    chart: {\n      type: \"bar\",\n      id: \"li\",\n    },\n    series: [\n      {\n        name: \"sales\",\n        data: [30, 40, 35, 50, 49, 60, 70, 91, 125],\n      },\n    ],\n    xaxis: {\n      categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999],\n    },\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n  return (\n    <>\n      <div id=\"app\">\n        <div id=\"chart\"></div>\n      </div>\n      {/* <div id=\"wrapper\" className=\"wrapper\">\n        <div className=\"select\">\n          <Select\n            options={optionsDevice}\n            className=\"selecttime\"\n            placeholder={<div>{selectDevice}</div>}\n            onChange={OnChangeDevice}\n          />\n          <Select\n            options={options}\n            className=\"selecttime\"\n            placeholder={<div>1 day</div>}\n            onChange={onChange}\n          />\n        </div>\n\n        <div className=\"chart-time-series\">\n          <div id=\"chart-small\" className=\"timeseries\">\n            <ReactApexChart\n              options={optionsPH}\n              series={seriesPH}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>PH Time Series Chart</h3>\n          </div>\n          <div id=\"chart-small2\" className=\"timeseries\">\n            <ReactApexChart\n              options={optionsTDS}\n              series={seriesTDS}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>TDS Time Series Chart</h3>\n          </div>\n\n          <div>\n            <div id=\"chart-area\" className=\"timeseries\">\n              <ReactApexChart\n                options={optionsTemp}\n                series={seriesTemp}\n                type=\"area\"\n                height={170}\n                width={1040}\n              />\n              <h3>Temperature Time Series Chart</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"wrapper\"></div> */}\n    </>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}