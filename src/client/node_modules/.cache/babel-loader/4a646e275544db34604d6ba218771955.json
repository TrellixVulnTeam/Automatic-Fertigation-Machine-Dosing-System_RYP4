{"ast":null,"code":"import { CONFIGTYPE_LOADED_SUCCESS, CONFIGTYPE_LOADED_FAIL, ADD_CONFIGTYPE, DELETE_CONFIGTYPE, FIND_CONFIGTYPE, UPDATE_CONFIGTYPE } from \"../contexts/constants\";\nexport const typeReducer = (Type, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CONFIGTYPE_LOADED_SUCCESS:\n      return { ...state,\n        data: payload,\n        dataLoading: false\n      };\n\n    case CONFIGTYPE_LOADED_FAIL:\n      return { ...state,\n        data: [],\n        dataLoading: false\n      };\n\n    case ADD_CONFIGTYPE:\n      return { ...Type,\n        posts: [...state.posts, payload]\n      };\n\n    case DELETE_CONFIGTYPE:\n      return { ...Type,\n        posts: state.posts.filter(post => post._id !== payload)\n      };\n\n    case FIND_CONFIGTYPE:\n      return { ...Type,\n        post: payload\n      };\n\n    case UPDATE_CONFIGTYPE:\n      const newPosts = state.posts.map(post => post._id === payload._id ? payload : post);\n      return { ...Type,\n        posts: newPosts\n      };\n\n    default:\n      return Type;\n  }\n};","map":{"version":3,"sources":["/home/tran/Downloads/backend/client/src/reducers/typeReducer.js"],"names":["CONFIGTYPE_LOADED_SUCCESS","CONFIGTYPE_LOADED_FAIL","ADD_CONFIGTYPE","DELETE_CONFIGTYPE","FIND_CONFIGTYPE","UPDATE_CONFIGTYPE","typeReducer","Type","action","type","payload","state","data","dataLoading","posts","filter","post","_id","newPosts","map"],"mappings":"AAAA,SACEA,yBADF,EAEEC,sBAFF,EAGEC,cAHF,EAIEC,iBAJF,EAKEC,eALF,EAMEC,iBANF,QAOO,uBAPP;AAQA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKT,yBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELC,QAAAA,IAAI,EAAEF,OAFD;AAGLG,QAAAA,WAAW,EAAE;AAHR,OAAP;;AAKF,SAAKZ,sBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELC,QAAAA,IAAI,EAAE,EAFD;AAGLC,QAAAA,WAAW,EAAE;AAHR,OAAP;;AAKF,SAAKX,cAAL;AACE,aAAO,EACL,GAAGK,IADE;AAELO,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBJ,OAAjB;AAFF,OAAP;;AAKF,SAAKP,iBAAL;AACE,aAAO,EACL,GAAGI,IADE;AAELO,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,OAA1C;AAFF,OAAP;;AAKF,SAAKN,eAAL;AACE,aAAO,EAAE,GAAGG,IAAL;AAAWS,QAAAA,IAAI,EAAEN;AAAjB,OAAP;;AAEF,SAAKL,iBAAL;AACE,YAAMa,QAAQ,GAAGP,KAAK,CAACG,KAAN,CAAYK,GAAZ,CAAiBH,IAAD,IAC/BA,IAAI,CAACC,GAAL,KAAaP,OAAO,CAACO,GAArB,GAA2BP,OAA3B,GAAqCM,IADtB,CAAjB;AAIA,aAAO,EACL,GAAGT,IADE;AAELO,QAAAA,KAAK,EAAEI;AAFF,OAAP;;AAKF;AACE,aAAOX,IAAP;AAvCJ;AAyCD,CA3CM","sourcesContent":["import {\n  CONFIGTYPE_LOADED_SUCCESS,\n  CONFIGTYPE_LOADED_FAIL,\n  ADD_CONFIGTYPE,\n  DELETE_CONFIGTYPE,\n  FIND_CONFIGTYPE,\n  UPDATE_CONFIGTYPE,\n} from \"../contexts/constants\";\nexport const typeReducer = (Type, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case CONFIGTYPE_LOADED_SUCCESS:\n      return {\n        ...state,\n        data: payload,\n        dataLoading: false,\n      };\n    case CONFIGTYPE_LOADED_FAIL:\n      return {\n        ...state,\n        data: [],\n        dataLoading: false,\n      };\n    case ADD_CONFIGTYPE:\n      return {\n        ...Type,\n        posts: [...state.posts, payload],\n      };\n\n    case DELETE_CONFIGTYPE:\n      return {\n        ...Type,\n        posts: state.posts.filter((post) => post._id !== payload),\n      };\n\n    case FIND_CONFIGTYPE:\n      return { ...Type, post: payload };\n\n    case UPDATE_CONFIGTYPE:\n      const newPosts = state.posts.map((post) =>\n        post._id === payload._id ? payload : post\n      );\n\n      return {\n        ...Type,\n        posts: newPosts,\n      };\n\n    default:\n      return Type;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}