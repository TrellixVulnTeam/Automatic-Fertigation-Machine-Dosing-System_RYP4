{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/ESP32_full/src/client/src/components/routing/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport Spinner from \"react-bootstrap/esm/Spinner\";\nimport NavbarMenu from \"../layout/NavbarMenu\";\nimport \"../../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const {\n    authState: {\n      authLoading,\n      isAuthenticated\n    }\n  } = useContext(AuthContext);\n  if (authLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner-container\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n  /* <Component {...rest} {...props} /> behind <NavbarMenu/> */\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(NavbarMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProtectedRoute, \"1FNufjhugNf8RDzoDwuOs08P0C4=\");\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/tran/Downloads/ESP32_full/src/client/src/components/routing/ProtectedRoute.js"],"names":["Route","Redirect","useContext","AuthContext","Spinner","NavbarMenu","ProtectedRoute","component","Component","rest","authState","authLoading","isAuthenticated","props"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,eAAP;;;;AAEA,MAAMC,cAAc,GAAG,QAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AAC5D,QAAM;AACJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf;AADP,MAEFV,UAAU,CAACC,WAAD,CAFd;AAIA,MAAIQ,WAAJ,EACE,oBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKF;;AACA,sBACE,QAAC,KAAD,OACMF,IADN;AAEE,IAAA,MAAM,EAAGI,KAAD,IACND,eAAe,gBACb;AAAA,6BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF,qBADa,gBAKb,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1BD;;GAAMN,c;;KAAAA,c;AA2BN,eAAeA,cAAf","sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport Spinner from \"react-bootstrap/esm/Spinner\";\nimport NavbarMenu from \"../layout/NavbarMenu\";\nimport \"../../App.css\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const {\n    authState: { authLoading, isAuthenticated },\n  } = useContext(AuthContext);\n\n  if (authLoading)\n    return (\n      <div className=\"spinner-container\">\n        <Spinner animation=\"border\" variant=\"info\" />\n      </div>\n    );\n  /* <Component {...rest} {...props} /> behind <NavbarMenu/> */\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthenticated ? (\n          <>\n            <NavbarMenu />\n          </>\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}