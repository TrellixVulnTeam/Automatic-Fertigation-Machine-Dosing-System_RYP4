{"ast":null,"code":"import { CONFIGTYPE_LOADED_SUCCESS, CONFIGTYPE_LOADED_FAIL, ADD_CONFIGTYPE, DELETE_CONFIGTYPE, FIND_CONFIGTYPE, UPDATE_CONFIGTYPE } from \"../contexts/constants\";\nexport const typeReducer = (typeagr, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CONFIGTYPE_LOADED_SUCCESS:\n      return { ...typeagr,\n        config: payload,\n        configLoading: false\n      };\n\n    case CONFIGTYPE_LOADED_FAIL:\n      return { ...typeagr,\n        config: [],\n        configLoading: false\n      };\n    // case ADD_CONFIGTYPE:\n    //   return {\n    //     ...typeagr,\n    //     posts: [...typeagr.posts, payload],\n    //   };\n    // case DELETE_CONFIGTYPE:\n    //   return {\n    //     ...type,\n    //     posts: type.posts.filter((post) => post._id !== payload),\n    //   };\n    // case FIND_CONFIGTYPE:\n    //   return { ...type, post: payload };\n    // case UPDATE_CONFIGTYPE:\n    //   const newPosts = type.posts.map((post) =>\n    //     post._id === payload._id ? payload : post\n    //   );\n    //   return {\n    //     ...type,\n    //     posts: newPosts,\n    //   };\n\n    default:\n      return type;\n  }\n};","map":{"version":3,"sources":["/home/tran/Downloads/backend/client/src/reducers/typeReducer.js"],"names":["CONFIGTYPE_LOADED_SUCCESS","CONFIGTYPE_LOADED_FAIL","ADD_CONFIGTYPE","DELETE_CONFIGTYPE","FIND_CONFIGTYPE","UPDATE_CONFIGTYPE","typeReducer","typeagr","action","type","payload","config","configLoading"],"mappings":"AAAA,SACEA,yBADF,EAEEC,sBAFF,EAGEC,cAHF,EAIEC,iBAJF,EAKEC,eALF,EAMEC,iBANF,QAOO,uBAPP;AAQA,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC9C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKT,yBAAL;AACE,aAAO,EACL,GAAGO,OADE;AAELI,QAAAA,MAAM,EAAED,OAFH;AAGLE,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAKF,SAAKX,sBAAL;AACE,aAAO,EACL,GAAGM,OADE;AAELI,QAAAA,MAAM,EAAE,EAFH;AAGLC,QAAAA,aAAa,EAAE;AAHV,OAAP;AAKF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACE,aAAOH,IAAP;AAvCJ;AAyCD,CA3CM","sourcesContent":["import {\n  CONFIGTYPE_LOADED_SUCCESS,\n  CONFIGTYPE_LOADED_FAIL,\n  ADD_CONFIGTYPE,\n  DELETE_CONFIGTYPE,\n  FIND_CONFIGTYPE,\n  UPDATE_CONFIGTYPE,\n} from \"../contexts/constants\";\nexport const typeReducer = (typeagr, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case CONFIGTYPE_LOADED_SUCCESS:\n      return {\n        ...typeagr,\n        config: payload,\n        configLoading: false,\n      };\n    case CONFIGTYPE_LOADED_FAIL:\n      return {\n        ...typeagr,\n        config: [],\n        configLoading: false,\n      };\n    // case ADD_CONFIGTYPE:\n    //   return {\n    //     ...typeagr,\n    //     posts: [...typeagr.posts, payload],\n    //   };\n\n    // case DELETE_CONFIGTYPE:\n    //   return {\n    //     ...type,\n    //     posts: type.posts.filter((post) => post._id !== payload),\n    //   };\n\n    // case FIND_CONFIGTYPE:\n    //   return { ...type, post: payload };\n\n    // case UPDATE_CONFIGTYPE:\n    //   const newPosts = type.posts.map((post) =>\n    //     post._id === payload._id ? payload : post\n    //   );\n\n    //   return {\n    //     ...type,\n    //     posts: newPosts,\n    //   };\n\n    default:\n      return type;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}