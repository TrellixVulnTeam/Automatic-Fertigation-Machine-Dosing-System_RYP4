{"ast":null,"code":"import { DATA_LOADED_FAIL, DATA_LOADED_SUCCESS, ADD_DEVICE, CONFIG, STATE_LOADED_FAIL, STATE_LOADED_SUCCESS, ADD_CONFIGTYPE, DELETE_CONFIGTYPE, FIND_CONFIGTYPE, UPDATE_CONFIGTYPE } from \"../contexts/constants\";\nexport const dataReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case DATA_LOADED_SUCCESS:\n      return { ...state,\n        data: payload,\n        dataLoading: false\n      };\n\n    case DATA_LOADED_FAIL:\n      return { ...state,\n        data: [],\n        dataLoading: false\n      };\n\n    case STATE_LOADED_SUCCESS:\n      return { ...state,\n        state: payload,\n        stateLoading: false\n      };\n\n    case STATE_LOADED_FAIL:\n      return { ...state,\n        state: [],\n        stateLoading: false\n      };\n\n    case ADD_DEVICE:\n      return { ...state\n      };\n\n    case CONFIG:\n      return { ...state\n      };\n\n    case ADD_CONFIGTYPE:\n      return { ...state,\n        posts: [...state.posts, payload]\n      };\n\n    case DELETE_CONFIGTYPE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload)\n      };\n\n    case FIND_CONFIGTYPE:\n      return { ...state,\n        post: payload\n      };\n\n    case UPDATE_CONFIGTYPE:\n      const newPosts = state.posts.map(post => post._id === payload._id ? payload : post);\n      return { ...state,\n        posts: newPosts\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/tran/Downloads/backend/client/src/reducers/dataReducer.js"],"names":["DATA_LOADED_FAIL","DATA_LOADED_SUCCESS","ADD_DEVICE","CONFIG","STATE_LOADED_FAIL","STATE_LOADED_SUCCESS","ADD_CONFIGTYPE","DELETE_CONFIGTYPE","FIND_CONFIGTYPE","UPDATE_CONFIGTYPE","dataReducer","state","action","type","payload","data","dataLoading","stateLoading","posts","filter","post","_id","newPosts","map"],"mappings":"AAAA,SACEA,gBADF,EAEEC,mBAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,iBALF,EAMEC,oBANF,EAOEC,cAPF,EAQEC,iBARF,EASEC,eATF,EAUEC,iBAVF,QAWO,uBAXP;AAYA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKZ,mBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELI,QAAAA,IAAI,EAAED,OAFD;AAGLE,QAAAA,WAAW,EAAE;AAHR,OAAP;;AAKF,SAAKhB,gBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELI,QAAAA,IAAI,EAAE,EAFD;AAGLC,QAAAA,WAAW,EAAE;AAHR,OAAP;;AAKF,SAAKX,oBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELA,QAAAA,KAAK,EAAEG,OAFF;AAGLG,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF,SAAKb,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELA,QAAAA,KAAK,EAAE,EAFF;AAGLM,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF,SAAKf,UAAL;AACE,aAAO,EACL,GAAGS;AADE,OAAP;;AAGF,SAAKR,MAAL;AACE,aAAO,EACL,GAAGQ;AADE,OAAP;;AAIF,SAAKL,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELO,QAAAA,KAAK,EAAE,CAAC,GAAGP,KAAK,CAACO,KAAV,EAAiBJ,OAAjB;AAFF,OAAP;;AAKF,SAAKP,iBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELO,QAAAA,KAAK,EAAEP,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,OAA1C;AAFF,OAAP;;AAKF,SAAKN,eAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYS,QAAAA,IAAI,EAAEN;AAAlB,OAAP;;AAEF,SAAKL,iBAAL;AACE,YAAMa,QAAQ,GAAGX,KAAK,CAACO,KAAN,CAAYK,GAAZ,CAAiBH,IAAD,IAC/BA,IAAI,CAACC,GAAL,KAAaP,OAAO,CAACO,GAArB,GAA2BP,OAA3B,GAAqCM,IADtB,CAAjB;AAIA,aAAO,EACL,GAAGT,KADE;AAELO,QAAAA,KAAK,EAAEI;AAFF,OAAP;;AAKF;AACE,aAAOX,KAAP;AA5DJ;AA8DD,CAhEM","sourcesContent":["import {\n  DATA_LOADED_FAIL,\n  DATA_LOADED_SUCCESS,\n  ADD_DEVICE,\n  CONFIG,\n  STATE_LOADED_FAIL,\n  STATE_LOADED_SUCCESS,\n  ADD_CONFIGTYPE,\n  DELETE_CONFIGTYPE,\n  FIND_CONFIGTYPE,\n  UPDATE_CONFIGTYPE,\n} from \"../contexts/constants\";\nexport const dataReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case DATA_LOADED_SUCCESS:\n      return {\n        ...state,\n        data: payload,\n        dataLoading: false,\n      };\n    case DATA_LOADED_FAIL:\n      return {\n        ...state,\n        data: [],\n        dataLoading: false,\n      };\n    case STATE_LOADED_SUCCESS:\n      return {\n        ...state,\n        state: payload,\n        stateLoading: false,\n      };\n    case STATE_LOADED_FAIL:\n      return {\n        ...state,\n        state: [],\n        stateLoading: false,\n      };\n    case ADD_DEVICE:\n      return {\n        ...state,\n      };\n    case CONFIG:\n      return {\n        ...state,\n      };\n\n    case ADD_CONFIGTYPE:\n      return {\n        ...state,\n        posts: [...state.posts, payload],\n      };\n\n    case DELETE_CONFIGTYPE:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n      };\n\n    case FIND_CONFIGTYPE:\n      return { ...state, post: payload };\n\n    case UPDATE_CONFIGTYPE:\n      const newPosts = state.posts.map((post) =>\n        post._id === payload._id ? payload : post\n      );\n\n      return {\n        ...state,\n        posts: newPosts,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}