{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = () => {\n  _s();\n\n  const arrayTime = [];\n  let seriesTemp = [];\n  let seriesTDS = [];\n  let seriesPH = [];\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\n  const {\n    deviceState: {\n      deviceData\n    },\n    getDevice\n  } = useContext(DeviceContext); // //get last data\n\n  const [chartData, setChartData] = useState({\n    seriesTemperature: [{\n      name: \"Temperature\",\n      data: []\n    }],\n    optionsTemperature: {\n      chart: {\n        id: \"area\",\n        group: \"social\",\n        type: \"area\"\n      },\n      colors: [\"#00E396\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: []\n      },\n      noData: {\n        text: \"Loading...\"\n      }\n    },\n    seriesPHChart: [{\n      name: \"PH\",\n      data: []\n    }],\n    optionsPhChart: {\n      chart: {\n        id: \"ig\",\n        group: \"social\",\n        type: \"area\"\n      },\n      colors: [\"#008FFB\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6\n      },\n      noData: {\n        text: \"Loading...\"\n      }\n    },\n    seriesTDSChart: [{\n      name: \"TDS\",\n      data: []\n    }],\n    optionsTDSChart: {\n      chart: {\n        id: \"li\",\n        group: \"social\",\n        type: \"area\"\n      },\n      colors: [\"#b37700\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6\n      },\n      noData: {\n        text: \"Loading...\"\n      }\n    }\n  });\n  useEffect(() => {\n    getDevice();\n  }, []);\n  var optionsDevice = [];\n\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = {\n      value: deviceData[i].device,\n      label: `Device ${i + 1}`\n    };\n    optionsDevice.push(value);\n  }\n\n  console.log(optionsDevice);\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectedDevice === optionsDevice[i].label) {\n      setSelectedDevice(deviceData[i].device);\n    }\n  }\n\n  const OnChangeDevice = event => {\n    setSelectedDevice(event.label);\n  };\n\n  const [time, setTime] = useState(\"1\"); // if (time === \"1\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(\"58bf251706a0\", 48);\n  // } else if (time === \"2\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(selectedDevice, 336);\n  // } else if (time === \"3\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(selectedDevice, 1440);\n  // }\n\n  function fetchChartData(device, length) {\n    console.log(device);\n    axios.get(`${url}/data/chart/${device}/${length}`).then(response => {\n      const data = response.data; // console.log(data);\n      // seriesTemp.push(...data.getalldata[0]);\n      // seriesTDS.push(...data.getalldata[1]);\n      // seriesPH.push(...data.getalldata[2]);\n      // arrayTime.push(...data.getalldata[3]);\n\n      setChartData({ ...chartData,\n        seriesTemperature: [{\n          name: \"Temperature\",\n          data: data.getalldata[0]\n        }],\n        optionsTemperature: {\n          chart: {\n            id: \"area\",\n            group: \"social\",\n            type: \"area\"\n          },\n          colors: [\"#00E396\"],\n          xaxis: {\n            type: \"datetime\",\n            categories: data.getalldata[3]\n          }\n        },\n        seriesPHChart: [{\n          name: \"PH\",\n          data: data.getalldata[2]\n        }],\n        optionsPhChart: {\n          chart: {\n            id: \"ig\",\n            group: \"social\",\n            type: \"area\"\n          },\n          colors: [\"#008FFB\"],\n          xaxis: {\n            type: \"datetime\",\n            categories: data.getalldata[3]\n          }\n        },\n        seriesTDSChart: [{\n          name: \"TDS\",\n          data: data.getalldata[1]\n        }],\n        optionsTDSChart: {\n          chart: {\n            id: \"li\",\n            group: \"social\",\n            type: \"area\"\n          },\n          colors: [\"#b37700\"],\n          xaxis: {\n            type: \"datetime\",\n            categories: data.getalldata[3]\n          }\n        }\n      }); // window.dispatchEvent(new Event(\"resize\"));\n    }).catch(e => {\n      console.log(\"Error retrieving data!!!\");\n    });\n  }\n\n  useEffect(() => {\n    console.log(chartData);\n  }, [chartData]);\n  useEffect(() => {\n    if (time === \"1\") {\n      // console.log(selectedDevice);\n      fetchChartData(selectedDevice, 48);\n    } else if (time === \"2\") {\n      // console.log(selectedDevice);\n      fetchChartData(selectedDevice, 336);\n    } else if (time === \"3\") {\n      // console.log(selectedDevice);\n      fetchChartData(selectedDevice, 1440);\n    }\n  }, [selectedDevice, time]); // const seriesTemperature = [\n  //   {\n  //     name: \"Temperature\",\n  //     data: seriesTemp,\n  //   },\n  // ];\n  // const optionsTemperature = {\n  //   chart: {\n  //     id: \"area\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#00E396\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     min: arrayTime[0],\n  //   },\n  //   zoom: {\n  //     type: \"x\",\n  //     enabled: true,\n  //     autoScaleYaxis: true,\n  //   },\n  //   toolbar: {\n  //     autoSelected: \"zoom\",\n  //   },\n  // };\n  // const seriesPHChart = [\n  //   {\n  //     name: \"PH\",\n  //     data: seriesPH,\n  //   },\n  // ];\n  // const optionsPhChart = {\n  //   chart: {\n  //     id: \"ig\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#008FFB\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     min: arrayTime[0],\n  //     tickAmount: 6,\n  //   },\n  //   zoom: {\n  //     type: \"x\",\n  //     enabled: true,\n  //     autoScaleYaxis: true,\n  //   },\n  //   toolbar: {\n  //     autoSelected: \"zoom\",\n  //   },\n  // };\n  // const seriesTDSChart = [\n  //   {\n  //     name: \"TDS\",\n  //     data: seriesTDS,\n  //   },\n  // ];\n  // const optionsTDSChart = {\n  //   chart: {\n  //     id: \"li\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#b37700\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     min: arrayTime[0],\n  //     tickAmount: 6,\n  //   },\n  //   zoom: {\n  //     type: \"x\",\n  //     enabled: true,\n  //     autoScaleYaxis: true,\n  //   },\n  //   toolbar: {\n  //     autoSelected: \"zoom\",\n  //   },\n  // };\n\n  const timeOptions = [{\n    value: \"1\",\n    label: \"1 day\"\n  }, {\n    value: \"2\",\n    label: \"1 week\"\n  }, {\n    value: \"3\",\n    label: \"1 month\"\n  }];\n\n  const onChange = event => setTime(event.value);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        options: optionsDevice,\n        className: \"selecttime\",\n        placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedDevice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 24\n        }, this),\n        onChange: OnChangeDevice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: timeOptions,\n        className: \"selecttime\",\n        placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"1 day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 24\n        }, this),\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-time-series\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart-small2\",\n          className: \"timeseries\",\n          children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: chartData.optionsTDSChart,\n            series: chartData.seriesTDSChart,\n            type: \"area\",\n            height: 170,\n            width: 1040\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"TDS Time Series Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"chart-area\",\n            className: \"timeseries\",\n            children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n              options: chartData.optionsTemperature,\n              series: chartData.seriesTemperature,\n              type: \"area\",\n              height: 170,\n              width: 1040\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Temperature Time Series Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Statistics, \"xjaS5pqVzI7FMzUo3MOcNgRUyW0=\");\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/tran/Downloads/ESP32_full/src/client/src/views/Statistics.js"],"names":["React","axios","ReactApexChart","Select","url","useState","useEffect","useContext","DeviceContext","Statistics","arrayTime","seriesTemp","seriesTDS","seriesPH","selectedDevice","setSelectedDevice","deviceState","deviceData","getDevice","chartData","setChartData","seriesTemperature","name","data","optionsTemperature","chart","id","group","type","colors","xaxis","categories","noData","text","seriesPHChart","optionsPhChart","tickAmount","seriesTDSChart","optionsTDSChart","optionsDevice","i","length","value","device","label","push","console","log","OnChangeDevice","event","time","setTime","fetchChartData","get","then","response","getalldata","catch","e","timeOptions","onChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./statistics.css\";\nimport axios from \"axios\";\nimport ReactApexChart from \"react-apexcharts\";\nimport Select from \"react-select\";\nimport { url } from \"../contexts/constants\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { DeviceContext } from \"../contexts/DeviceContext\";\n\nconst Statistics = () => {\n  const arrayTime = [];\n  let seriesTemp = [];\n  let seriesTDS = [];\n  let seriesPH = [];\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\n\n  const {\n    deviceState: { deviceData },\n    getDevice,\n  } = useContext(DeviceContext);\n  // //get last data\n\n  const [chartData, setChartData] = useState({\n    seriesTemperature: [\n      {\n        name: \"Temperature\",\n        data: [],\n      },\n    ],\n    optionsTemperature: {\n      chart: {\n        id: \"area\",\n        group: \"social\",\n        type: \"area\",\n      },\n      colors: [\"#00E396\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n      },\n      noData: {\n        text: \"Loading...\",\n      },\n    },\n    seriesPHChart: [\n      {\n        name: \"PH\",\n        data: [],\n      },\n    ],\n    optionsPhChart: {\n      chart: {\n        id: \"ig\",\n        group: \"social\",\n        type: \"area\",\n      },\n      colors: [\"#008FFB\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6,\n      },\n      noData: {\n        text: \"Loading...\",\n      },\n    },\n\n    seriesTDSChart: [\n      {\n        name: \"TDS\",\n        data: [],\n      },\n    ],\n    optionsTDSChart: {\n      chart: {\n        id: \"li\",\n        group: \"social\",\n        type: \"area\",\n      },\n      colors: [\"#b37700\"],\n      xaxis: {\n        type: \"datetime\",\n        categories: [],\n        tickAmount: 6,\n      },\n      noData: {\n        text: \"Loading...\",\n      },\n    },\n  });\n\n  useEffect(() => {\n    getDevice();\n  }, []);\n\n  var optionsDevice = [];\n  for (let i = 0; i < deviceData.length; i++) {\n    let value = [];\n    value = { value: deviceData[i].device, label: `Device ${i + 1}` };\n    optionsDevice.push(value);\n  }\n  console.log(optionsDevice);\n\n  for (let i = 0; i < deviceData.length; i++) {\n    if (selectedDevice === optionsDevice[i].label) {\n      setSelectedDevice(deviceData[i].device);\n    }\n  }\n  const OnChangeDevice = (event) => {\n    setSelectedDevice(event.label);\n  };\n\n  const [time, setTime] = useState(\"1\");\n  // if (time === \"1\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(\"58bf251706a0\", 48);\n  // } else if (time === \"2\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(selectedDevice, 336);\n  // } else if (time === \"3\") {\n  //   console.log(selectedDevice);\n  //   fetchChartData(selectedDevice, 1440);\n  // }\n  function fetchChartData(device, length) {\n    console.log(device);\n    axios\n      .get(`${url}/data/chart/${device}/${length}`)\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n        // seriesTemp.push(...data.getalldata[0]);\n        // seriesTDS.push(...data.getalldata[1]);\n        // seriesPH.push(...data.getalldata[2]);\n        // arrayTime.push(...data.getalldata[3]);\n\n        setChartData({\n          ...chartData,\n          seriesTemperature: [\n            {\n              name: \"Temperature\",\n              data: data.getalldata[0],\n            },\n          ],\n          optionsTemperature: {\n            chart: {\n              id: \"area\",\n              group: \"social\",\n              type: \"area\",\n            },\n            colors: [\"#00E396\"],\n            xaxis: {\n              type: \"datetime\",\n              categories: data.getalldata[3],\n            },\n          },\n          seriesPHChart: [\n            {\n              name: \"PH\",\n              data: data.getalldata[2],\n            },\n          ],\n          optionsPhChart: {\n            chart: {\n              id: \"ig\",\n              group: \"social\",\n              type: \"area\",\n            },\n            colors: [\"#008FFB\"],\n            xaxis: {\n              type: \"datetime\",\n              categories: data.getalldata[3],\n            },\n          },\n          seriesTDSChart: [\n            {\n              name: \"TDS\",\n              data: data.getalldata[1],\n            },\n          ],\n          optionsTDSChart: {\n            chart: {\n              id: \"li\",\n              group: \"social\",\n              type: \"area\",\n            },\n            colors: [\"#b37700\"],\n            xaxis: {\n              type: \"datetime\",\n              categories: data.getalldata[3],\n            },\n          },\n        });\n\n        // window.dispatchEvent(new Event(\"resize\"));\n      })\n      .catch((e) => {\n        console.log(\"Error retrieving data!!!\");\n      });\n  }\n\n  useEffect(() => {\n    console.log(chartData);\n  }, [chartData]);\n\n  useEffect(() => {\n    if (time === \"1\") {\n      // console.log(selectedDevice);\n      fetchChartData(selectedDevice, 48);\n    } else if (time === \"2\") {\n      // console.log(selectedDevice);\n      fetchChartData(selectedDevice, 336);\n    } else if (time === \"3\") {\n      // console.log(selectedDevice);\n      fetchChartData(selectedDevice, 1440);\n    }\n  }, [selectedDevice, time]);\n\n  // const seriesTemperature = [\n  //   {\n  //     name: \"Temperature\",\n  //     data: seriesTemp,\n  //   },\n  // ];\n  // const optionsTemperature = {\n  //   chart: {\n  //     id: \"area\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#00E396\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     min: arrayTime[0],\n  //   },\n  //   zoom: {\n  //     type: \"x\",\n  //     enabled: true,\n  //     autoScaleYaxis: true,\n  //   },\n  //   toolbar: {\n  //     autoSelected: \"zoom\",\n  //   },\n  // };\n\n  // const seriesPHChart = [\n  //   {\n  //     name: \"PH\",\n  //     data: seriesPH,\n  //   },\n  // ];\n  // const optionsPhChart = {\n  //   chart: {\n  //     id: \"ig\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#008FFB\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     min: arrayTime[0],\n  //     tickAmount: 6,\n  //   },\n  //   zoom: {\n  //     type: \"x\",\n  //     enabled: true,\n  //     autoScaleYaxis: true,\n  //   },\n  //   toolbar: {\n  //     autoSelected: \"zoom\",\n  //   },\n  // };\n\n  // const seriesTDSChart = [\n  //   {\n  //     name: \"TDS\",\n  //     data: seriesTDS,\n  //   },\n  // ];\n  // const optionsTDSChart = {\n  //   chart: {\n  //     id: \"li\",\n  //     group: \"social\",\n  //     type: \"area\",\n  //   },\n  //   colors: [\"#b37700\"],\n  //   xaxis: {\n  //     type: \"datetime\",\n  //     min: arrayTime[0],\n  //     tickAmount: 6,\n  //   },\n  //   zoom: {\n  //     type: \"x\",\n  //     enabled: true,\n  //     autoScaleYaxis: true,\n  //   },\n  //   toolbar: {\n  //     autoSelected: \"zoom\",\n  //   },\n  // };\n  const timeOptions = [\n    { value: \"1\", label: \"1 day\" },\n    { value: \"2\", label: \"1 week\" },\n    { value: \"3\", label: \"1 month\" },\n  ];\n\n  const onChange = (event) => setTime(event.value);\n\n  return (\n    <>\n      <div id=\"wrapper\" className=\"wrapper\">\n        <Select\n          options={optionsDevice}\n          className=\"selecttime\"\n          placeholder={<div>{selectedDevice}</div>}\n          onChange={OnChangeDevice}\n        />\n        <Select\n          options={timeOptions}\n          className=\"selecttime\"\n          placeholder={<div>1 day</div>}\n          onChange={onChange}\n        />\n        <div className=\"chart-time-series\">\n          {/* <div id=\"chart-small\" className=\"timeseries\">\n            <ReactApexChart\n              options={chartData.optionsPhChart}\n              series={chartData.seriesPHChart}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>PH Time Series Chart</h3>\n          </div> */}\n          <div id=\"chart-small2\" className=\"timeseries\">\n            <ReactApexChart\n              options={chartData.optionsTDSChart}\n              series={chartData.seriesTDSChart}\n              type=\"area\"\n              height={170}\n              width={1040}\n            />\n            <h3>TDS Time Series Chart</h3>\n          </div>\n\n          <div>\n            <div id=\"chart-area\" className=\"timeseries\">\n              <ReactApexChart\n                options={chartData.optionsTemperature}\n                series={chartData.seriesTemperature}\n                type=\"area\"\n                height={170}\n                width={1040}\n              />\n              <h3>Temperature Time Series Chart</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"wrapper\"></div>\n    </>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}