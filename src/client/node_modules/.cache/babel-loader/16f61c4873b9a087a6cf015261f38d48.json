{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/backend27042022/client/src/contexts/StatusContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useState } from \"react\";\nimport { statusReducer } from \"../reducers/statusReducer\";\nimport { url, STATUS_LOADED_FAIL, STATUS_LOADED_SUCCESS } from \"./constants\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StatusContext = /*#__PURE__*/createContext();\n\nconst StatusContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [statusState, dispatchStatus] = useReducer(statusReducer, {\n    status: [],\n    statusLoading: true\n  }); /// get status of device\n\n  const getStatus = async () => {\n    try {\n      const responce = await axios.get(`${url}/state`);\n\n      if (responce.data.success) {\n        dispatchStatus({\n          type: STATUS_LOADED_SUCCESS,\n          payload: responce.data.getState\n        });\n      }\n    } catch (error) {\n      dispatchStatus({\n        type: STATUS_LOADED_FAIL\n      });\n    }\n  };\n\n  const statusContextData = {\n    statusState,\n    getStatus\n  };\n  return /*#__PURE__*/_jsxDEV(StatusContext.Provider, {\n    value: statusContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StatusContextProvider, \"62tZ02xIS0sQ6lmXv6W19QTlTZU=\");\n\n_c = StatusContextProvider;\nexport default StatusContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusContextProvider\");","map":{"version":3,"sources":["/home/tran/Downloads/backend27042022/client/src/contexts/StatusContext.js"],"names":["createContext","useReducer","useState","statusReducer","url","STATUS_LOADED_FAIL","STATUS_LOADED_SUCCESS","axios","StatusContext","StatusContextProvider","children","statusState","dispatchStatus","status","statusLoading","getStatus","responce","get","data","success","type","payload","getState","error","statusContextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,GAAT,EAAcC,kBAAd,EAAkCC,qBAAlC,QAA+D,aAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,OAAO,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;;AAEP,MAAMS,qBAAqB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,UAAU,CAACE,aAAD,EAAgB;AAC9DU,IAAAA,MAAM,EAAE,EADsD;AAE9DC,IAAAA,aAAa,EAAE;AAF+C,GAAhB,CAAhD,CAD8C,CAK9C;;AACA,QAAMC,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEb,GAAI,QAAjB,CAAvB;;AACA,UAAIY,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBP,QAAAA,cAAc,CAAC;AACbQ,UAAAA,IAAI,EAAEd,qBADO;AAEbe,UAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcI;AAFV,SAAD,CAAd;AAID;AACF,KARD,CAQE,OAAOC,KAAP,EAAc;AACdX,MAAAA,cAAc,CAAC;AAAEQ,QAAAA,IAAI,EAAEf;AAAR,OAAD,CAAd;AACD;AACF,GAZD;;AAcA,QAAMmB,iBAAiB,GAAG;AACxBb,IAAAA,WADwB;AAExBI,IAAAA;AAFwB,GAA1B;AAIA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAES,iBAA/B;AAAA,cACGd;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BD;;GAAMD,qB;;KAAAA,qB;AA8BN,eAAeA,qBAAf","sourcesContent":["import { createContext, useReducer, useState } from \"react\";\nimport { statusReducer } from \"../reducers/statusReducer\";\nimport { url, STATUS_LOADED_FAIL, STATUS_LOADED_SUCCESS } from \"./constants\";\nimport axios from \"axios\";\nexport const StatusContext = createContext();\n\nconst StatusContextProvider = ({ children }) => {\n  const [statusState, dispatchStatus] = useReducer(statusReducer, {\n    status: [],\n    statusLoading: true,\n  });\n  /// get status of device\n  const getStatus = async () => {\n    try {\n      const responce = await axios.get(`${url}/state`);\n      if (responce.data.success) {\n        dispatchStatus({\n          type: STATUS_LOADED_SUCCESS,\n          payload: responce.data.getState,\n        });\n      }\n    } catch (error) {\n      dispatchStatus({ type: STATUS_LOADED_FAIL });\n    }\n  };\n\n  const statusContextData = {\n    statusState,\n    getStatus,\n  };\n  return (\n    <StatusContext.Provider value={statusContextData}>\n      {children}\n    </StatusContext.Provider>\n  );\n};\nexport default StatusContextProvider;\n"]},"metadata":{},"sourceType":"module"}