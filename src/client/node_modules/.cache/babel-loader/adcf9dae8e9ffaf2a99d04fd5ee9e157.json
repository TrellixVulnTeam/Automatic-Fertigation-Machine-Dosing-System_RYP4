{"ast":null,"code":"var _jsxFileName = \"/home/tran/Downloads/ESP32_full/src/client/src/views/Device.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from \"react\";\nimport \"./device.css\";\nimport { DataContext } from \"../contexts/DataContext\";\nimport { TypeContext } from \"../contexts/TypeContext\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { TypeModalContext } from \"../contexts/TypeModalContext\";\nimport devicelogo from \"../assets/device.jpg\";\nimport PHImage from \"../assets/PH.png\";\nimport React, { Component } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Button from \"react-bootstrap/Button\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport ActionButtons from \"../type/ActionButton\";\nimport addButton from \"../assets/addButton.png\";\nimport SingleType from \"../type/SingleType\";\nimport SingleTypeModal from \"../type/SingleTypeModal\";\nimport AddTypeModal from \"../type/AddTypeModal\";\nimport UpdateTypeModal from \"../type/UpdateTypeModal\";\nimport { SetVolumeContext } from \"../contexts/SetVolumeContext\";\nimport Switch from \"react-switch\";\nimport Select from \"react-select\";\nimport Toast from \"react-bootstrap/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Device = () => {\n  _s();\n\n  const {\n    dataState: {\n      data: {\n        device\n      }\n    },\n    getData\n  } = useContext(DataContext);\n  const [data, setData] = useState({\n    data: []\n  });\n  const {\n    typeState: {\n      configtype,\n      config,\n      configLoading\n    },\n    getConfigType,\n    setShowAddTypeModal,\n    showToast: {\n      show,\n      message,\n      Type\n    },\n    setShowToast\n  } = useContext(TypeContext);\n  const {\n    configState: {\n      currentConfig: {\n        type,\n        TDS,\n        dead_TDS,\n        PH,\n        dead_PH,\n        nutri_Ratio\n      }\n    },\n    getConfigData\n  } = useContext(ConfigContext);\n  const {\n    typeModalState: {\n      typeModal\n    },\n    getTypeModal\n  } = useContext(TypeModalContext);\n  const {\n    setVolumeState: {\n      setVolume: {\n        Nutri_A_full,\n        Nutri_B_full,\n        Acid_So_full,\n        Base_So_full\n      }\n    },\n    getSetVolume,\n    addSetVolume,\n    updateVolume\n  } = useContext(SetVolumeContext);\n  useEffect(() => getData(), []);\n  useEffect(() => getConfigData(), []);\n  useEffect(() => getConfigType(), []);\n  useEffect(() => getTypeModal(), []);\n  useEffect(() => getSetVolume(), []); // add device\n\n  const {\n    addDevices\n  } = useContext(DataContext);\n  const [newDevice, setNewDevice] = useState({\n    device: \"\"\n  });\n  const {\n    deviceID\n  } = newDevice;\n\n  const onChangeNewDeviceForm = event => setNewDevice({ ...newDevice,\n    [event.target.name]: event.target.value\n  });\n\n  const onSubmmit = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        success,\n        message\n      } = await addDevices(newDevice);\n      setNewDevice({\n        deviceID: \"\"\n      });\n      setShowToast({\n        show: true,\n        message,\n        Type: success ? \"info\" : \"danger\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [newConfig, newSetConfig] = useState({\n    TDS: \"\",\n    dead_TDS: \"\",\n    PH: \"\",\n    dead_PH: \"\",\n    nutri_Ratio: \"\"\n  });\n  const {\n    newTDS,\n    newDead_TDS,\n    newPH,\n    newDead_PH,\n    newnutri_Ratio\n  } = newConfig;\n  const {\n    configManual\n  } = useContext(ConfigContext);\n\n  const onSubmmitConfigManual = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        success,\n        message\n      } = await configManual(newConfig);\n      newSetConfig({\n        TDS: \" \",\n        dead_TDS: \" \",\n        PH: \" \",\n        dead_PH: \" \",\n        nutri_Ratio: \" \"\n      });\n      setShowToast({\n        show: true,\n        message,\n        Type: success ? \"info\" : \"danger\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChangeNewSetConfigForm = event => newSetConfig({ ...newConfig,\n    device,\n    type: \"Manual\",\n    [event.target.name]: event.target.value\n  }); //socket io\n\n\n  const {\n    authState: {\n      user: {\n        username,\n        _id\n      }\n    }\n  } = useContext(AuthContext);\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:5200\", {\n      reconnection: true,\n      reconnectionDelay: 500,\n      reconnectionAttempts: 10\n    });\n    socket.current.on();\n  }, []);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", _id);\n    socket.current.on(\"getUsers\", users => {//sconsole.log(users);\n    });\n    socket.current.emit(\"getConfig\", _id);\n    socket.current.on(\"sendConfig\", config => {\n      console.log(config);\n      setData(config);\n    });\n  }, [username]); //initialize option for personal setting\n\n  var options = [];\n\n  for (let i = 0; i < config.length; i++) {\n    let value = [];\n    value = {\n      value: config[i]._id,\n      label: config[i].type\n    };\n    options.push(value);\n  }\n\n  const [selectTypePersonalState, setSelectTypePersonalState] = useState(\"\");\n\n  const onChangePersonal = event => setSelectTypePersonalState(event.value);\n\n  let body12 = null;\n\n  if (options !== null) {\n    for (let i = 0; i < config.length; i++) {\n      if (options[i].value === selectTypePersonalState) {\n        body12 = /*#__PURE__*/_jsxDEV(SingleType, {\n          config: config[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 18\n        }, this);\n      }\n    }\n  } //initialize option for personal setting\n\n\n  var optionsGlobal = [];\n\n  for (let i = 0; i < typeModal.length; i++) {\n    let value = [];\n    value = {\n      value: typeModal[i]._id,\n      label: typeModal[i].typeModal\n    };\n    optionsGlobal.push(value);\n  }\n\n  const [selectTypeGlobalState, setSelectTypeGlobalState] = useState(\"\");\n\n  const onChangeGlobal = event => setSelectTypeGlobalState(event.value);\n\n  let bodyTypeGlobal = null;\n\n  if (optionsGlobal !== null) {\n    for (let i = 0; i < typeModal.length; i++) {\n      if (optionsGlobal[i].value === selectTypeGlobalState) {\n        bodyTypeGlobal = /*#__PURE__*/_jsxDEV(SingleTypeModal, {\n          typeModal: typeModal[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 26\n        }, this);\n      }\n    }\n  }\n\n  let body1 = null;\n\n  if (configLoading) {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (config.length === 0) {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PersonalTypeBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-new-vegetable\",\n          children: \"Click button below to add your profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-new-vegetable\",\n          variant: \"primary\",\n          onClick: setShowAddTypeModal.bind(this, true),\n          children: \"Add new vegetables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    body1 = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PersonalTypeBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PersonalTitle\",\n          children: \"Personal profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"personalAndButton\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            options: options,\n            onChange: onChangePersonal,\n            className: \"selectPersonalType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            placement: \"left\",\n            overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n              children: \"Add a new profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 24\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-floating\",\n              onClick: setShowAddTypeModal.bind(this, true),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: addButton,\n                height: \"15\",\n                width: \"15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), body12]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  let bodyGlobal = null;\n\n  if (typeModal.length !== 0) {\n    bodyGlobal = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GlobalTypeBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"globalTitle\",\n          children: \"Recommend profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: optionsGlobal,\n          onChange: onChangeGlobal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), bodyTypeGlobal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  const [checked, setChecked] = useState(false);\n  let bodyConfigManual = null;\n\n  const onChangeChecked = () => {\n    setChecked(!checked);\n  };\n\n  if (checked == true) {\n    bodyConfigManual = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmmitConfigManual,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PH-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pH\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Current PH value set: \", PH]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              className: \"text\",\n              placeholder: \"Set PH value...\",\n              name: \"PH\",\n              value: newPH,\n              onChange: onChangeNewSetConfigForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_PH\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Current dead PH value set: \", dead_PH]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              className: \"text\",\n              placeholder: \"Dead PH value...\",\n              name: \"dead_PH\",\n              value: newDead_PH,\n              onChange: onChangeNewSetConfigForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TDS-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tDS\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Current TDS value set: \", TDS, \" ppm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              className: \"text\",\n              placeholder: \"Set TDS value...\",\n              name: \"TDS\",\n              value: newTDS,\n              onChange: onChangeNewSetConfigForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dead_TDS\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Current dead TDS value set: \", dead_TDS, \" ppm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              className: \"text\",\n              placeholder: \"Dead TDS value...\",\n              name: \"dead_TDS\",\n              value: newDead_TDS,\n              onChange: onChangeNewSetConfigForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nutriRatio\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current nutri ratio value set: \", nutri_Ratio, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"text\",\n            placeholder: \"Nutri ratio value...\",\n            name: \"nutri_Ratio\",\n            value: newnutri_Ratio,\n            onChange: onChangeNewSetConfigForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"button\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  const [newVolume, newSetVolume] = useState({\n    Nutri_A_full: \" \",\n    Nutri_B_full: \" \",\n    Acid_So_full: \" \",\n    Base_So_full: \" \"\n  });\n  const {\n    newNutri_A_full,\n    newNutri_B_full,\n    newAcid_So_full,\n    newBase_So_full\n  } = newVolume;\n\n  const onSubmmitVolumeBottles = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        success,\n        message\n      } = await addSetVolume(newVolume);\n      newSetVolume({\n        Nutri_A_full: \" \",\n        Nutri_B_full: \" \",\n        Acid_So_full: \" \",\n        Base_So_full: \" \"\n      });\n      setShowToast({\n        show: true,\n        message,\n        Type: success ? \"info\" : \"danger\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onPutVolumeBottles = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        success,\n        message\n      } = await updateVolume(newVolume);\n      newSetVolume({\n        Nutri_A_full: \" \",\n        Nutri_B_full: \" \",\n        Acid_So_full: \" \",\n        Base_So_full: \" \"\n      });\n      setShowToast({\n        show: true,\n        message,\n        Type: success ? \"info\" : \"danger\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChangeNewSetVolumeForm = event => newSetVolume({ ...newVolume,\n    device,\n    Water_So_full: \"0\",\n    [event.target.name]: event.target.value\n  });\n\n  let bodyVolumeBottle = null;\n  console.log(Nutri_A_full);\n\n  if (Nutri_A_full === null) {\n    bodyVolumeBottle = /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmmitVolumeBottles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PH-config\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pH\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current volume of Nutri A bottle: \", Nutri_A_full, \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"text\",\n            placeholder: \"Nutri A bottle...\",\n            name: \"Nutri_A_full\",\n            value: newNutri_A_full,\n            onChange: onChangeNewSetVolumeForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dead_PH\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current volume of Nutri B bottle: \", Nutri_B_full, \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"text\",\n            placeholder: \"Nutri B bottle...\",\n            name: \"Nutri_B_full\",\n            value: newNutri_B_full,\n            onChange: onChangeNewSetVolumeForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TDS-config\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tDS\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current volume of Acid bottle: \", Acid_So_full, \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"text\",\n            placeholder: \"Acid value...\",\n            name: \"Acid_So_full\",\n            value: newAcid_So_full,\n            onChange: onChangeNewSetVolumeForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dead_TDS\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current volume of Bazo bottle: \", Base_So_full, \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"text\",\n            placeholder: \"Bazo bottle...\",\n            name: \"Base_So_full\",\n            value: newBase_So_full,\n            onChange: onChangeNewSetVolumeForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"button\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this);\n  } else {\n    bodyVolumeBottle = /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onPutVolumeBottles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PH-config\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pH\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current volume of Nutri A bottle: \", Nutri_A_full, \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"text\",\n            placeholder: \"Nutri A bottle...\",\n            name: \"Nutri_A_full\",\n            value: newNutri_A_full,\n            onChange: onChangeNewSetVolumeForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dead_PH\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current volume of Nutri B bottle: \", Nutri_B_full, \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"text\",\n            placeholder: \"Nutri B bottle...\",\n            name: \"Nutri_B_full\",\n            value: newNutri_B_full,\n            onChange: onChangeNewSetVolumeForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TDS-config\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tDS\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current volume of Acid bottle: \", Acid_So_full, \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"text\",\n            placeholder: \"Acid value...\",\n            name: \"Acid_So_full\",\n            value: newAcid_So_full,\n            onChange: onChangeNewSetVolumeForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dead_TDS\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Current volume of Bazo bottle: \", Base_So_full, \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            className: \"text\",\n            placeholder: \"Bazo bottle...\",\n            name: \"Base_So_full\",\n            value: newBase_So_full,\n            onChange: onChangeNewSetVolumeForm,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"button\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-new-vegetable\",\n          children: [\"Current setting is \", type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titleGlobal-Personal\",\n            children: \"Choose your config by your profile or recommend profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionTypePersonalGlobal\",\n            children: [body1, bodyGlobal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AddTypeModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), configtype !== null && /*#__PURE__*/_jsxDEV(UpdateTypeModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Toast, {\n            show: show,\n            style: {\n              position: \"fixed\",\n              top: \"20%\",\n              right: \"10px\"\n            },\n            className: `bg-${Type} text-white`,\n            onClose: setShowToast.bind(this, {\n              show: false,\n              message: \"\",\n              type: null\n            }),\n            delay: 3000,\n            autohide: true,\n            children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"configManualTitle\",\n          children: \"Config value manual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: checked,\n          onChange: onChangeChecked,\n          onColor: \"#86d3ff\",\n          onHandleColor: \"#2693e6\",\n          handleDiameter: 17,\n          uncheckedIcon: false,\n          checkedIcon: false,\n          boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n          activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n          height: 20,\n          width: 35,\n          className: \"react-switch\",\n          id: \"material-switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), bodyConfigManual]\n      }, void 0, true), bodyVolumeBottle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addDevice\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: devicelogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Add your new device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"text\",\n              placeholder: \"Device ID...\",\n              name: \"device\",\n              value: deviceID,\n              onChange: onChangeNewDeviceForm,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"addButton\",\n              value: \"Add device  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Device, \"IoOmhE/VZ8kpMSeuEsXIM6scP6E=\");\n\n_c = Device;\nexport default Device;\n\nvar _c;\n\n$RefreshReg$(_c, \"Device\");","map":{"version":3,"sources":["/home/tran/Downloads/ESP32_full/src/client/src/views/Device.js"],"names":["useState","useContext","useEffect","useRef","DataContext","TypeContext","ConfigContext","AuthContext","TypeModalContext","devicelogo","PHImage","React","Component","io","Button","Tooltip","OverlayTrigger","ActionButtons","addButton","SingleType","SingleTypeModal","AddTypeModal","UpdateTypeModal","SetVolumeContext","Switch","Select","Toast","Device","dataState","data","device","getData","setData","typeState","configtype","config","configLoading","getConfigType","setShowAddTypeModal","showToast","show","message","Type","setShowToast","configState","currentConfig","type","TDS","dead_TDS","PH","dead_PH","nutri_Ratio","getConfigData","typeModalState","typeModal","getTypeModal","setVolumeState","setVolume","Nutri_A_full","Nutri_B_full","Acid_So_full","Base_So_full","getSetVolume","addSetVolume","updateVolume","addDevices","newDevice","setNewDevice","deviceID","onChangeNewDeviceForm","event","target","name","value","onSubmmit","preventDefault","success","error","console","log","newConfig","newSetConfig","newTDS","newDead_TDS","newPH","newDead_PH","newnutri_Ratio","configManual","onSubmmitConfigManual","onChangeNewSetConfigForm","authState","user","username","_id","socket","current","reconnection","reconnectionDelay","reconnectionAttempts","on","emit","users","options","i","length","label","push","selectTypePersonalState","setSelectTypePersonalState","onChangePersonal","body12","optionsGlobal","selectTypeGlobalState","setSelectTypeGlobalState","onChangeGlobal","bodyTypeGlobal","body1","bind","bodyGlobal","checked","setChecked","bodyConfigManual","onChangeChecked","newVolume","newSetVolume","newNutri_A_full","newNutri_B_full","newAcid_So_full","newBase_So_full","onSubmmitVolumeBottles","onPutVolumeBottles","onChangeNewSetVolumeForm","Water_So_full","bodyVolumeBottle","position","top","right"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect, useRef } from \"react\";\nimport \"./device.css\";\nimport { DataContext } from \"../contexts/DataContext\";\nimport { TypeContext } from \"../contexts/TypeContext\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { TypeModalContext } from \"../contexts/TypeModalContext\";\n\nimport devicelogo from \"../assets/device.jpg\";\nimport PHImage from \"../assets/PH.png\";\nimport React, { Component } from \"react\";\n\nimport { io } from \"socket.io-client\";\nimport Button from \"react-bootstrap/Button\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport ActionButtons from \"../type/ActionButton\";\nimport addButton from \"../assets/addButton.png\";\nimport SingleType from \"../type/SingleType\";\nimport SingleTypeModal from \"../type/SingleTypeModal\";\nimport AddTypeModal from \"../type/AddTypeModal\";\nimport UpdateTypeModal from \"../type/UpdateTypeModal\";\nimport { SetVolumeContext } from \"../contexts/SetVolumeContext\";\nimport Switch from \"react-switch\";\nimport Select from \"react-select\";\n\nimport Toast from \"react-bootstrap/Toast\";\n\nconst Device = () => {\n  const {\n    dataState: {\n      data: { device },\n    },\n    getData,\n  } = useContext(DataContext);\n\n  const [data, setData] = useState({ data: [] });\n\n  const {\n    typeState: { configtype, config, configLoading },\n    getConfigType,\n    setShowAddTypeModal,\n    showToast: { show, message, Type },\n    setShowToast,\n  } = useContext(TypeContext);\n\n  const {\n    configState: {\n      currentConfig: { type, TDS, dead_TDS, PH, dead_PH, nutri_Ratio },\n    },\n    getConfigData,\n  } = useContext(ConfigContext);\n\n  const {\n    typeModalState: { typeModal },\n    getTypeModal,\n  } = useContext(TypeModalContext);\n\n  const {\n    setVolumeState: {\n      setVolume: { Nutri_A_full, Nutri_B_full, Acid_So_full, Base_So_full },\n    },\n    getSetVolume,\n    addSetVolume,\n    updateVolume,\n  } = useContext(SetVolumeContext);\n\n  useEffect(() => getData(), []);\n  useEffect(() => getConfigData(), []);\n  useEffect(() => getConfigType(), []);\n  useEffect(() => getTypeModal(), []);\n  useEffect(() => getSetVolume(), []);\n  // add device\n\n  const { addDevices } = useContext(DataContext);\n\n  const [newDevice, setNewDevice] = useState({\n    device: \"\",\n  });\n\n  const { deviceID } = newDevice;\n\n  const onChangeNewDeviceForm = (event) =>\n    setNewDevice({\n      ...newDevice,\n      [event.target.name]: event.target.value,\n    });\n\n  const onSubmmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { success, message } = await addDevices(newDevice);\n      setNewDevice({ deviceID: \"\" });\n      setShowToast({ show: true, message, Type: success ? \"info\" : \"danger\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [newConfig, newSetConfig] = useState({\n    TDS: \"\",\n    dead_TDS: \"\",\n    PH: \"\",\n    dead_PH: \"\",\n    nutri_Ratio: \"\",\n  });\n\n  const { newTDS, newDead_TDS, newPH, newDead_PH, newnutri_Ratio } = newConfig;\n  const { configManual } = useContext(ConfigContext);\n  const onSubmmitConfigManual = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { success, message } = await configManual(newConfig);\n      newSetConfig({\n        TDS: \" \",\n        dead_TDS: \" \",\n        PH: \" \",\n        dead_PH: \" \",\n        nutri_Ratio: \" \",\n      });\n      setShowToast({ show: true, message, Type: success ? \"info\" : \"danger\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChangeNewSetConfigForm = (event) =>\n    newSetConfig({\n      ...newConfig,\n      device,\n      type: \"Manual\",\n      [event.target.name]: event.target.value,\n    });\n\n  //socket io\n  const {\n    authState: {\n      user: { username, _id },\n    },\n  } = useContext(AuthContext);\n  const socket = useRef();\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:5200\", {\n      reconnection: true,\n      reconnectionDelay: 500,\n      reconnectionAttempts: 10,\n    });\n    socket.current.on();\n  }, []);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", _id);\n    socket.current.on(\"getUsers\", (users) => {\n      //sconsole.log(users);\n    });\n    socket.current.emit(\"getConfig\", _id);\n    socket.current.on(\"sendConfig\", (config) => {\n      console.log(config);\n      setData(config);\n    });\n  }, [username]);\n\n  //initialize option for personal setting\n  var options = [];\n  for (let i = 0; i < config.length; i++) {\n    let value = [];\n    value = { value: config[i]._id, label: config[i].type };\n    options.push(value);\n  }\n\n  const [selectTypePersonalState, setSelectTypePersonalState] = useState(\"\");\n  const onChangePersonal = (event) => setSelectTypePersonalState(event.value);\n  let body12 = null;\n  if (options !== null) {\n    for (let i = 0; i < config.length; i++) {\n      if (options[i].value === selectTypePersonalState) {\n        body12 = <SingleType config={config[i]} />;\n      }\n    }\n  }\n\n  //initialize option for personal setting\n  var optionsGlobal = [];\n  for (let i = 0; i < typeModal.length; i++) {\n    let value = [];\n    value = { value: typeModal[i]._id, label: typeModal[i].typeModal };\n    optionsGlobal.push(value);\n  }\n\n  const [selectTypeGlobalState, setSelectTypeGlobalState] = useState(\"\");\n  const onChangeGlobal = (event) => setSelectTypeGlobalState(event.value);\n  let bodyTypeGlobal = null;\n  if (optionsGlobal !== null) {\n    for (let i = 0; i < typeModal.length; i++) {\n      if (optionsGlobal[i].value === selectTypeGlobalState) {\n        bodyTypeGlobal = <SingleTypeModal typeModal={typeModal[i]} />;\n      }\n    }\n  }\n\n  let body1 = null;\n  if (configLoading) {\n    body1 = (\n      <>\n        <h1>Loading</h1>\n      </>\n    );\n  } else if (config.length === 0) {\n    body1 = (\n      <>\n        <div className=\"PersonalTypeBox\">\n          <div className=\"title-new-vegetable\">\n            Click button below to add your profile\n          </div>\n          <Button\n            className=\"button-new-vegetable\"\n            variant=\"primary\"\n            onClick={setShowAddTypeModal.bind(this, true)}\n          >\n            Add new vegetables\n          </Button>\n        </div>\n      </>\n    );\n  } else {\n    body1 = (\n      <>\n        <div className=\"PersonalTypeBox\">\n          <div className=\"PersonalTitle\">Personal profile</div>\n          <div className=\"personalAndButton\">\n            <Select\n              options={options}\n              onChange={onChangePersonal}\n              className=\"selectPersonalType\"\n            />\n            <OverlayTrigger\n              placement=\"left\"\n              overlay={<Tooltip>Add a new profile</Tooltip>}\n            >\n              <Button\n                className=\"btn-floating\"\n                onClick={setShowAddTypeModal.bind(this, true)}\n              >\n                <img src={addButton} height=\"15\" width=\"15\" />\n              </Button>\n            </OverlayTrigger>\n          </div>\n\n          {body12}\n        </div>\n      </>\n    );\n  }\n\n  let bodyGlobal = null;\n  if (typeModal.length !== 0) {\n    bodyGlobal = (\n      <>\n        <div className=\"GlobalTypeBox\">\n          <div className=\"globalTitle\">Recommend profile</div>\n          <Select options={optionsGlobal} onChange={onChangeGlobal} />\n          {bodyTypeGlobal}\n        </div>\n      </>\n    );\n  }\n\n  const [checked, setChecked] = useState(false);\n  let bodyConfigManual = null;\n  const onChangeChecked = () => {\n    setChecked(!checked);\n  };\n  if (checked == true) {\n    bodyConfigManual = (\n      <>\n        <form onSubmit={onSubmmitConfigManual}>\n          <div className=\"PH-config\">\n            <div className=\"pH\">\n              <h2>Current PH value set: {PH}</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                className=\"text\"\n                placeholder=\"Set PH value...\"\n                name=\"PH\"\n                value={newPH}\n                onChange={onChangeNewSetConfigForm}\n                required\n              />\n            </div>\n            <div className=\"dead_PH\">\n              <h2>Current dead PH value set: {dead_PH}</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                className=\"text\"\n                placeholder=\"Dead PH value...\"\n                name=\"dead_PH\"\n                value={newDead_PH}\n                onChange={onChangeNewSetConfigForm}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"TDS-config\">\n            <div className=\"tDS\">\n              <h2>Current TDS value set: {TDS} ppm</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                className=\"text\"\n                placeholder=\"Set TDS value...\"\n                name=\"TDS\"\n                value={newTDS}\n                onChange={onChangeNewSetConfigForm}\n                required\n              />\n            </div>\n            <div className=\"dead_TDS\">\n              <h2>Current dead TDS value set: {dead_TDS} ppm</h2>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                className=\"text\"\n                placeholder=\"Dead TDS value...\"\n                name=\"dead_TDS\"\n                value={newDead_TDS}\n                onChange={onChangeNewSetConfigForm}\n                required\n              />\n            </div>\n          </div>\n          {/* <img src={PHImage} /> */}\n          <div className=\"nutriRatio\">\n            <h2>Current nutri ratio value set: {nutri_Ratio} </h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"text\"\n              placeholder=\"Nutri ratio value...\"\n              name=\"nutri_Ratio\"\n              value={newnutri_Ratio}\n              onChange={onChangeNewSetConfigForm}\n              required\n            />\n          </div>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      </>\n    );\n  }\n\n  const [newVolume, newSetVolume] = useState({\n    Nutri_A_full: \" \",\n    Nutri_B_full: \" \",\n    Acid_So_full: \" \",\n    Base_So_full: \" \",\n  });\n\n  const { newNutri_A_full, newNutri_B_full, newAcid_So_full, newBase_So_full } =\n    newVolume;\n  const onSubmmitVolumeBottles = async (event) => {\n    event.preventDefault();\n    try {\n      const { success, message } = await addSetVolume(newVolume);\n      newSetVolume({\n        Nutri_A_full: \" \",\n        Nutri_B_full: \" \",\n        Acid_So_full: \" \",\n        Base_So_full: \" \",\n      });\n      setShowToast({ show: true, message, Type: success ? \"info\" : \"danger\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onPutVolumeBottles = async (event) => {\n    event.preventDefault();\n    try {\n      const { success, message } = await updateVolume(newVolume);\n      newSetVolume({\n        Nutri_A_full: \" \",\n        Nutri_B_full: \" \",\n        Acid_So_full: \" \",\n        Base_So_full: \" \",\n      });\n      setShowToast({ show: true, message, Type: success ? \"info\" : \"danger\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const onChangeNewSetVolumeForm = (event) =>\n    newSetVolume({\n      ...newVolume,\n      device,\n      Water_So_full: \"0\",\n      [event.target.name]: event.target.value,\n    });\n\n  let bodyVolumeBottle = null;\n  console.log(Nutri_A_full);\n  if (Nutri_A_full === null) {\n    bodyVolumeBottle = (\n      <form onSubmit={onSubmmitVolumeBottles}>\n        <div className=\"PH-config\">\n          <div className=\"pH\">\n            <h2>Current volume of Nutri A bottle: {Nutri_A_full} ml</h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"text\"\n              placeholder=\"Nutri A bottle...\"\n              name=\"Nutri_A_full\"\n              value={newNutri_A_full}\n              onChange={onChangeNewSetVolumeForm}\n              required\n            />\n          </div>\n          <div className=\"dead_PH\">\n            <h2>Current volume of Nutri B bottle: {Nutri_B_full} ml</h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"text\"\n              placeholder=\"Nutri B bottle...\"\n              name=\"Nutri_B_full\"\n              value={newNutri_B_full}\n              onChange={onChangeNewSetVolumeForm}\n              required\n            />\n          </div>\n        </div>\n\n        <div className=\"TDS-config\">\n          <div className=\"tDS\">\n            <h2>Current volume of Acid bottle: {Acid_So_full} ml</h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"text\"\n              placeholder=\"Acid value...\"\n              name=\"Acid_So_full\"\n              value={newAcid_So_full}\n              onChange={onChangeNewSetVolumeForm}\n              required\n            />\n          </div>\n          <div className=\"dead_TDS\">\n            <h2>Current volume of Bazo bottle: {Base_So_full} ml</h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"text\"\n              placeholder=\"Bazo bottle...\"\n              name=\"Base_So_full\"\n              value={newBase_So_full}\n              onChange={onChangeNewSetVolumeForm}\n              required\n            />\n          </div>\n        </div>\n        <input type=\"submit\" className=\"button\" value=\"Submit\" />\n      </form>\n    );\n  } else {\n    bodyVolumeBottle = (\n      <form onSubmit={onPutVolumeBottles}>\n        <div className=\"PH-config\">\n          <div className=\"pH\">\n            <h2>Current volume of Nutri A bottle: {Nutri_A_full} ml</h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"text\"\n              placeholder=\"Nutri A bottle...\"\n              name=\"Nutri_A_full\"\n              value={newNutri_A_full}\n              onChange={onChangeNewSetVolumeForm}\n              required\n            />\n          </div>\n          <div className=\"dead_PH\">\n            <h2>Current volume of Nutri B bottle: {Nutri_B_full} ml</h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"text\"\n              placeholder=\"Nutri B bottle...\"\n              name=\"Nutri_B_full\"\n              value={newNutri_B_full}\n              onChange={onChangeNewSetVolumeForm}\n              required\n            />\n          </div>\n        </div>\n\n        <div className=\"TDS-config\">\n          <div className=\"tDS\">\n            <h2>Current volume of Acid bottle: {Acid_So_full} ml</h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"text\"\n              placeholder=\"Acid value...\"\n              name=\"Acid_So_full\"\n              value={newAcid_So_full}\n              onChange={onChangeNewSetVolumeForm}\n              required\n            />\n          </div>\n          <div className=\"dead_TDS\">\n            <h2>Current volume of Bazo bottle: {Base_So_full} ml</h2>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              className=\"text\"\n              placeholder=\"Bazo bottle...\"\n              name=\"Base_So_full\"\n              value={newBase_So_full}\n              onChange={onChangeNewSetVolumeForm}\n              required\n            />\n          </div>\n        </div>\n        <input type=\"submit\" className=\"button\" value=\"Submit\" />\n      </form>\n    );\n  }\n  return (\n    <>\n      <div className=\"main\">\n        <div className=\"config\">\n          <div className=\"title-new-vegetable\">Current setting is {type}</div>\n\n          <div>\n            <div className=\"titleGlobal-Personal\">\n              Choose your config by your profile or recommend profile\n            </div>\n            <div className=\"optionTypePersonalGlobal\">\n              {body1}\n              {bodyGlobal}\n            </div>\n          </div>\n\n          <>\n            <AddTypeModal />\n            {configtype !== null && <UpdateTypeModal />}\n            <Toast\n              show={show}\n              style={{ position: \"fixed\", top: \"20%\", right: \"10px\" }}\n              className={`bg-${Type} text-white`}\n              onClose={setShowToast.bind(this, {\n                show: false,\n                message: \"\",\n                type: null,\n              })}\n              delay={3000}\n              autohide\n            >\n              <Toast.Body>\n                <strong>{message}</strong>\n              </Toast.Body>\n            </Toast>\n          </>\n        </div>\n\n        <>\n          <div className=\"configManualTitle\">Config value manual</div>\n          <Switch\n            checked={checked}\n            onChange={onChangeChecked}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={17}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={35}\n            className=\"react-switch\"\n            id=\"material-switch\"\n          />\n          {bodyConfigManual}\n        </>\n        {bodyVolumeBottle}\n      </div>\n\n      <div className=\"addDevice\">\n        <div className=\"device-box\">\n          <img src={devicelogo} />\n          <div className=\"form\">\n            <h1>Add your new device</h1>\n            <form onSubmit={onSubmmit}>\n              <input\n                type=\"text\"\n                className=\"text\"\n                placeholder=\"Device ID...\"\n                name=\"device\"\n                value={deviceID}\n                onChange={onChangeNewDeviceForm}\n                required\n              />\n              <input type=\"submit\" className=\"addButton\" value=\"Add device  \" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Device;\n"]},"metadata":{},"sourceType":"module"}